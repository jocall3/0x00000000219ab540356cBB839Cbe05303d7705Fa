{
	"compiler": {
		"version": "0.4.18+commit.9cf6e910"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": true,
				"inputs": [
					{
						"name": "node",
						"type": "bytes32"
					}
				],
				"name": "resolver",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "node",
						"type": "bytes32"
					}
				],
				"name": "owner",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "node",
						"type": "bytes32"
					},
					{
						"name": "label",
						"type": "bytes32"
					},
					{
						"name": "owner",
						"type": "address"
					}
				],
				"name": "setSubnodeOwner",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "node",
						"type": "bytes32"
					},
					{
						"name": "ttl",
						"type": "uint64"
					}
				],
				"name": "setTTL",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "node",
						"type": "bytes32"
					}
				],
				"name": "ttl",
				"outputs": [
					{
						"name": "",
						"type": "uint64"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "node",
						"type": "bytes32"
					},
					{
						"name": "resolver",
						"type": "address"
					}
				],
				"name": "setResolver",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "node",
						"type": "bytes32"
					},
					{
						"name": "owner",
						"type": "address"
					}
				],
				"name": "setOwner",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"name": "label",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"name": "owner",
						"type": "address"
					}
				],
				"name": "NewOwner",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"name": "owner",
						"type": "address"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"name": "resolver",
						"type": "address"
					}
				],
				"name": "NewResolver",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"name": "ttl",
						"type": "uint64"
					}
				],
				"name": "NewTTL",
				"type": "event"
			}
		],
		"devdoc": {
			"methods": {
				"owner(bytes32)": {
					"details": "Returns the address that owns the specified node.\r",
					"params": {
						"node": "The specified node.\r"
					},
					"return": "address of the owner.\r"
				},
				"resolver(bytes32)": {
					"details": "Returns the address of the resolver for the specified node.\r",
					"params": {
						"node": "The specified node.\r"
					},
					"return": "address of the resolver.\r"
				},
				"setOwner(bytes32,address)": {
					"details": "Transfers ownership of a node to a new address. May only be called by the current owner of the node.\r",
					"params": {
						"node": "The node to transfer ownership of.\r",
						"owner": "The address of the new owner.\r"
					}
				},
				"setResolver(bytes32,address)": {
					"details": "Sets the resolver address for the specified node.\r",
					"params": {
						"node": "The node to update.\r",
						"resolver": "The address of the resolver.\r"
					}
				},
				"setSubnodeOwner(bytes32,bytes32,address)": {
					"details": "Transfers ownership of a subnode keccak256(node, label) to a new address. May only be called by the owner of the parent node.\r",
					"params": {
						"label": "The hash of the label specifying the subnode.\r",
						"node": "The parent node.\r",
						"owner": "The address of the new owner.\r"
					}
				},
				"setTTL(bytes32,uint64)": {
					"details": "Sets the TTL for the specified node.\r",
					"params": {
						"node": "The node to update.\r",
						"ttl": "The TTL in seconds.\r"
					}
				},
				"ttl(bytes32)": {
					"details": "Returns the TTL of a node, and any records associated with it.\r",
					"params": {
						"node": "The specified node.\r"
					},
					"return": "ttl of the node.\r"
				}
			}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"ENSRegistry-1.sol": "ENSRegistry"
		},
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"ENS.sol": {
			"keccak256": "0x323ac7a5b1e5cdf19b5312f91581b08339e1b7aed7fdbe30338596f34fa22127",
			"urls": [
				"bzzr://3deb73de2d9c6b25b831e8f0c641df08f4c1f151fedc2780b464c085b49f158c"
			]
		},
		"ENSRegistry-1.sol": {
			"keccak256": "0x1334de38db637f45048a84b1cfa8f05c14b79a97ef2b1bee833757463b7f18a8",
			"urls": [
				"bzzr://c265430005af2558993727a06ceb2781944efa2a3a00b69f87485d00b86c716e"
			]
		}
	},
	"version": 1
}