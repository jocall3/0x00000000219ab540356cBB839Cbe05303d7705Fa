{
	"id": "714041267dcd0fe39034538df4e48f07",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.18",
	"solcLongVersion": "0.4.18+commit.9cf6e910",
	"input": {
		"language": "Solidity",
		"sources": {
			"Deed.sol": {
				"content": "/**\r\n * @title Deed to hold ether in exchange for ownership of a node\r\n * @dev The deed can be controlled only by the registrar and can only send ether back to the owner.\r\n */\r\ncontract Deed {\r\n\r\n    address constant burn = 0xdead;\r\n\r\n    address public registrar;\r\n    address public owner;\r\n    address public previousOwner;\r\n\r\n    uint public creationDate;\r\n    uint public value;\r\n\r\n    bool active;\r\n\r\n    event OwnerChanged(address newOwner);\r\n    event DeedClosed();\r\n\r\n    modifier onlyRegistrar {\r\n        require(msg.sender == registrar);\r\n        _;\r\n    }\r\n\r\n    modifier onlyActive {\r\n        require(active);\r\n        _;\r\n    }\r\n\r\n    function Deed(address _owner) public payable {\r\n        owner = _owner;\r\n        registrar = msg.sender;\r\n        creationDate = now;\r\n        active = true;\r\n        value = msg.value;\r\n    }\r\n\r\n    function setOwner(address newOwner) public onlyRegistrar {\r\n        require(newOwner != 0);\r\n        previousOwner = owner;  // This allows contracts to check who sent them the ownership\r\n        owner = newOwner;\r\n        OwnerChanged(newOwner);\r\n    }\r\n\r\n    function setRegistrar(address newRegistrar) public onlyRegistrar {\r\n        registrar = newRegistrar;\r\n    }\r\n\r\n    function setBalance(uint newValue, bool throwOnFailure) public onlyRegistrar onlyActive {\r\n        // Check if it has enough balance to set the value\r\n        require(value >= newValue);\r\n        value = newValue;\r\n        // Send the difference to the owner\r\n        require(owner.send(this.balance - newValue) || !throwOnFailure);\r\n    }\r\n\r\n    /**\r\n     * @dev Close a deed and refund a specified fraction of the bid value\r\n     *\r\n     * @param refundRatio The amount*1/1000 to refund\r\n     */\r\n    function closeDeed(uint refundRatio) public onlyRegistrar onlyActive {\r\n        active = false;\r\n        require(burn.send(((1000 - refundRatio) * this.balance)/1000));\r\n        DeedClosed();\r\n        destroyDeed();\r\n    }\r\n\r\n    /**\r\n     * @dev Close a deed and refund a specified fraction of the bid value\r\n     */\r\n    function destroyDeed() public {\r\n        require(!active);\r\n\r\n        // Instead of selfdestruct(owner), invoke owner fallback function to allow\r\n        // owner to log an event if desired; but owner should also be aware that\r\n        // its fallback function can also be invoked by setBalance\r\n        if (owner.send(this.balance)) {\r\n            selfdestruct(burn);\r\n        }\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Deed.sol": {
				"Deed": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "creationDate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "destroyDeed",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "registrar",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "value",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "previousOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newValue",
									"type": "uint256"
								},
								{
									"name": "throwOnFailure",
									"type": "bool"
								}
							],
							"name": "setBalance",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "refundRatio",
									"type": "uint256"
								}
							],
							"name": "closeDeed",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newRegistrar",
									"type": "address"
								}
							],
							"name": "setRegistrar",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "DeedClosed",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"closeDeed(uint256)": {
								"details": "Close a deed and refund a specified fraction of the bid value\r ",
								"params": {
									"refundRatio": "The amount*1/1000 to refund\r"
								}
							},
							"destroyDeed()": {
								"details": "Close a deed and refund a specified fraction of the bid value\r"
							}
						},
						"title": "Deed to hold ether in exchange for ownership of a node\r"
					},
					"evm": {
						"assembly": "    /* \"Deed.sol\":177:2441  contract Deed {\r... */\n  mstore(0x40, 0x60)\n    /* \"Deed.sol\":649:841  function Deed(address _owner) public payable {\r... */\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  pop\n  pop\n    /* \"Deed.sol\":713:719  _owner */\n  dup1\n    /* \"Deed.sol\":705:710  owner */\n  0x1\n  0x0\n    /* \"Deed.sol\":705:719  owner = _owner */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Deed.sol\":742:752  msg.sender */\n  caller\n    /* \"Deed.sol\":730:739  registrar */\n  0x0\n  dup1\n    /* \"Deed.sol\":730:752  registrar = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Deed.sol\":778:781  now */\n  timestamp\n    /* \"Deed.sol\":763:775  creationDate */\n  0x3\n    /* \"Deed.sol\":763:781  creationDate = now */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Deed.sol\":801:805  true */\n  0x1\n    /* \"Deed.sol\":792:798  active */\n  0x5\n  0x0\n    /* \"Deed.sol\":792:805  active = true */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Deed.sol\":824:833  msg.value */\n  callvalue\n    /* \"Deed.sol\":816:821  value */\n  0x4\n    /* \"Deed.sol\":816:833  value = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Deed.sol\":649:841  function Deed(address _owner) public payable {\r... */\n  pop\n    /* \"Deed.sol\":177:2441  contract Deed {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Deed.sol\":177:2441  contract Deed {\r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x5b34410\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xb5ab3d5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x13af4035\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2b20e397\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3fa4f245\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x674f220f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb0c80972\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xbbe42771\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xfaab9d39\n      eq\n      tag_11\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"Deed.sol\":334:358  uint public creationDate */\n    tag_2:\n      jumpi(tag_12, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_12:\n      tag_13\n      jump(tag_14)\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Deed.sol\":2052:2438  function destroyDeed() public {\r... */\n    tag_3:\n      jumpi(tag_15, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_15:\n      tag_16\n      jump(tag_17)\n    tag_16:\n      stop\n        /* \"Deed.sol\":849:1102  function setOwner(address newOwner) public onlyRegistrar {\r... */\n    tag_4:\n      jumpi(tag_18, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_18:\n      tag_19\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_20)\n    tag_19:\n      stop\n        /* \"Deed.sol\":239:263  address public registrar */\n    tag_5:\n      jumpi(tag_21, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_21:\n      tag_22\n      jump(tag_23)\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Deed.sol\":365:382  uint public value */\n    tag_6:\n      jumpi(tag_24, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_24:\n      tag_25\n      jump(tag_26)\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Deed.sol\":297:325  address public previousOwner */\n    tag_7:\n      jumpi(tag_27, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_27:\n      tag_28\n      jump(tag_29)\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Deed.sol\":270:290  address public owner */\n    tag_8:\n      jumpi(tag_30, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_30:\n      tag_31\n      jump(tag_32)\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Deed.sol\":1226:1565  function setBalance(uint newValue, bool throwOnFailure) public onlyRegistrar onlyActive {\r... */\n    tag_9:\n      jumpi(tag_33, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_33:\n      tag_34\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_35)\n    tag_34:\n      stop\n        /* \"Deed.sol\":1729:1951  function closeDeed(uint refundRatio) public onlyRegistrar onlyActive {\r... */\n    tag_10:\n      jumpi(tag_36, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_36:\n      tag_37\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_38)\n    tag_37:\n      stop\n        /* \"Deed.sol\":1110:1218  function setRegistrar(address newRegistrar) public onlyRegistrar {\r... */\n    tag_11:\n      jumpi(tag_39, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_39:\n      tag_40\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_41)\n    tag_40:\n      stop\n        /* \"Deed.sol\":334:358  uint public creationDate */\n    tag_14:\n      sload(0x3)\n      dup2\n      jump\t// out\n        /* \"Deed.sol\":2052:2438  function destroyDeed() public {\r... */\n    tag_17:\n        /* \"Deed.sol\":2102:2108  active */\n      0x5\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Deed.sol\":2101:2108  !active */\n      iszero\n        /* \"Deed.sol\":2093:2109  require(!active) */\n      iszero\n      iszero\n      tag_43\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_43:\n        /* \"Deed.sol\":2360:2365  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Deed.sol\":2360:2370  owner.send */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Deed.sol\":2360:2384  owner.send(this.balance) */\n      0x8fc\n        /* \"Deed.sol\":2371:2375  this */\n      address\n        /* \"Deed.sol\":2371:2383  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"Deed.sol\":2360:2384  owner.send(this.balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Deed.sol\":2356:2431  if (owner.send(this.balance)) {\r... */\n      iszero\n      tag_44\n      jumpi\n        /* \"Deed.sol\":224:230  0xdead */\n      0xdead\n        /* \"Deed.sol\":2401:2419  selfdestruct(burn) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"Deed.sol\":2356:2431  if (owner.send(this.balance)) {\r... */\n    tag_44:\n        /* \"Deed.sol\":2052:2438  function destroyDeed() public {\r... */\n      jump\t// out\n        /* \"Deed.sol\":849:1102  function setOwner(address newOwner) public onlyRegistrar {\r... */\n    tag_20:\n        /* \"Deed.sol\":537:546  registrar */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Deed.sol\":523:546  msg.sender == registrar */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Deed.sol\":523:533  msg.sender */\n      caller\n        /* \"Deed.sol\":523:546  msg.sender == registrar */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Deed.sol\":515:547  require(msg.sender == registrar) */\n      iszero\n      iszero\n      tag_46\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_46:\n        /* \"Deed.sol\":937:938  0 */\n      0x0\n        /* \"Deed.sol\":925:933  newOwner */\n      dup2\n        /* \"Deed.sol\":925:938  newOwner != 0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Deed.sol\":917:939  require(newOwner != 0) */\n      iszero\n      iszero\n      tag_48\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_48:\n        /* \"Deed.sol\":966:971  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Deed.sol\":950:963  previousOwner */\n      0x2\n      0x0\n        /* \"Deed.sol\":950:971  previousOwner = owner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Deed.sol\":1053:1061  newOwner */\n      dup1\n        /* \"Deed.sol\":1045:1050  owner */\n      0x1\n      0x0\n        /* \"Deed.sol\":1045:1061  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Deed.sol\":1072:1094  OwnerChanged(newOwner) */\n      0xa2ea9883a321a3e97b8266c2b078bfeec6d50c711ed71f874a90d500ae2eaf36\n        /* \"Deed.sol\":1085:1093  newOwner */\n      dup2\n        /* \"Deed.sol\":1072:1094  OwnerChanged(newOwner) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Deed.sol\":849:1102  function setOwner(address newOwner) public onlyRegistrar {\r... */\n      pop\n      jump\t// out\n        /* \"Deed.sol\":239:263  address public registrar */\n    tag_23:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Deed.sol\":365:382  uint public value */\n    tag_26:\n      sload(0x4)\n      dup2\n      jump\t// out\n        /* \"Deed.sol\":297:325  address public previousOwner */\n    tag_29:\n      0x2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Deed.sol\":270:290  address public owner */\n    tag_32:\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Deed.sol\":1226:1565  function setBalance(uint newValue, bool throwOnFailure) public onlyRegistrar onlyActive {\r... */\n    tag_35:\n        /* \"Deed.sol\":537:546  registrar */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Deed.sol\":523:546  msg.sender == registrar */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Deed.sol\":523:533  msg.sender */\n      caller\n        /* \"Deed.sol\":523:546  msg.sender == registrar */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Deed.sol\":515:547  require(msg.sender == registrar) */\n      iszero\n      iszero\n      tag_50\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_50:\n        /* \"Deed.sol\":614:620  active */\n      0x5\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Deed.sol\":606:621  require(active) */\n      iszero\n      iszero\n      tag_52\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_52:\n        /* \"Deed.sol\":1402:1410  newValue */\n      dup2\n        /* \"Deed.sol\":1393:1398  value */\n      sload(0x4)\n        /* \"Deed.sol\":1393:1410  value >= newValue */\n      lt\n      iszero\n        /* \"Deed.sol\":1385:1411  require(value >= newValue) */\n      iszero\n      iszero\n      tag_54\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_54:\n        /* \"Deed.sol\":1430:1438  newValue */\n      dup2\n        /* \"Deed.sol\":1422:1427  value */\n      0x4\n        /* \"Deed.sol\":1422:1438  value = newValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Deed.sol\":1502:1507  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Deed.sol\":1502:1512  owner.send */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Deed.sol\":1502:1537  owner.send(this.balance - newValue) */\n      0x8fc\n        /* \"Deed.sol\":1528:1536  newValue */\n      dup4\n        /* \"Deed.sol\":1513:1517  this */\n      address\n        /* \"Deed.sol\":1513:1525  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"Deed.sol\":1513:1536  this.balance - newValue */\n      sub\n        /* \"Deed.sol\":1502:1537  owner.send(this.balance - newValue) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Deed.sol\":1502:1556  owner.send(this.balance - newValue) || !throwOnFailure */\n      dup1\n      tag_55\n      jumpi\n      pop\n        /* \"Deed.sol\":1542:1556  throwOnFailure */\n      dup1\n        /* \"Deed.sol\":1541:1556  !throwOnFailure */\n      iszero\n        /* \"Deed.sol\":1502:1556  owner.send(this.balance - newValue) || !throwOnFailure */\n    tag_55:\n        /* \"Deed.sol\":1494:1557  require(owner.send(this.balance - newValue) || !throwOnFailure) */\n      iszero\n      iszero\n      tag_56\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_56:\n        /* \"Deed.sol\":1226:1565  function setBalance(uint newValue, bool throwOnFailure) public onlyRegistrar onlyActive {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Deed.sol\":1729:1951  function closeDeed(uint refundRatio) public onlyRegistrar onlyActive {\r... */\n    tag_38:\n        /* \"Deed.sol\":537:546  registrar */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Deed.sol\":523:546  msg.sender == registrar */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Deed.sol\":523:533  msg.sender */\n      caller\n        /* \"Deed.sol\":523:546  msg.sender == registrar */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Deed.sol\":515:547  require(msg.sender == registrar) */\n      iszero\n      iszero\n      tag_58\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_58:\n        /* \"Deed.sol\":614:620  active */\n      0x5\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Deed.sol\":606:621  require(active) */\n      iszero\n      iszero\n      tag_60\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_60:\n        /* \"Deed.sol\":1818:1823  false */\n      0x0\n        /* \"Deed.sol\":1809:1815  active */\n      0x5\n      0x0\n        /* \"Deed.sol\":1809:1823  active = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Deed.sol\":224:230  0xdead */\n      0xdead\n        /* \"Deed.sol\":1842:1851  burn.send */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Deed.sol\":1842:1895  burn.send(((1000 - refundRatio) * this.balance)/1000) */\n      0x8fc\n        /* \"Deed.sol\":1890:1894  1000 */\n      0x3e8\n        /* \"Deed.sol\":1876:1880  this */\n      address\n        /* \"Deed.sol\":1876:1888  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"Deed.sol\":1861:1872  refundRatio */\n      dup5\n        /* \"Deed.sol\":1854:1858  1000 */\n      0x3e8\n        /* \"Deed.sol\":1854:1872  1000 - refundRatio */\n      sub\n        /* \"Deed.sol\":1853:1888  (1000 - refundRatio) * this.balance */\n      mul\n        /* \"Deed.sol\":1852:1894  ((1000 - refundRatio) * this.balance)/1000 */\n      dup2\n      iszero\n      iszero\n      tag_62\n      jumpi\n      invalid\n    tag_62:\n      div\n        /* \"Deed.sol\":1842:1895  burn.send(((1000 - refundRatio) * this.balance)/1000) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Deed.sol\":1834:1896  require(burn.send(((1000 - refundRatio) * this.balance)/1000)) */\n      iszero\n      iszero\n      tag_63\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_63:\n        /* \"Deed.sol\":1907:1919  DeedClosed() */\n      0xbb2ce2f51803bba16bc85282b47deeea9a5c6223eabea1077be696b3f265cf13\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Deed.sol\":1930:1943  destroyDeed() */\n      tag_64\n        /* \"Deed.sol\":1930:1941  destroyDeed */\n      tag_17\n        /* \"Deed.sol\":1930:1943  destroyDeed() */\n      jump\t// in\n    tag_64:\n        /* \"Deed.sol\":1729:1951  function closeDeed(uint refundRatio) public onlyRegistrar onlyActive {\r... */\n      pop\n      jump\t// out\n        /* \"Deed.sol\":1110:1218  function setRegistrar(address newRegistrar) public onlyRegistrar {\r... */\n    tag_41:\n        /* \"Deed.sol\":537:546  registrar */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Deed.sol\":523:546  msg.sender == registrar */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Deed.sol\":523:533  msg.sender */\n      caller\n        /* \"Deed.sol\":523:546  msg.sender == registrar */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Deed.sol\":515:547  require(msg.sender == registrar) */\n      iszero\n      iszero\n      tag_66\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_66:\n        /* \"Deed.sol\":1198:1210  newRegistrar */\n      dup1\n        /* \"Deed.sol\":1186:1195  registrar */\n      0x0\n      dup1\n        /* \"Deed.sol\":1186:1210  registrar = newRegistrar */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Deed.sol\":1110:1218  function setRegistrar(address newRegistrar) public onlyRegistrar {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582060cdc5b6293e075ec9579690c49180507c4a636e819f3ca31e7dd886433b2a510029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60606040526040516020806109748339810160405280805190602001909190505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426003819055506001600560006101000a81548160ff021916908315150217905550346004819055505061089a806100da6000396000f3006060604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305b34410146100a95780630b5ab3d5146100d257806313af4035146100e75780632b20e397146101205780633fa4f24514610175578063674f220f1461019e5780638da5cb5b146101f3578063b0c8097214610248578063bbe4277114610276578063faab9d3914610299575b600080fd5b34156100b457600080fd5b6100bc6102d2565b6040518082815260200191505060405180910390f35b34156100dd57600080fd5b6100e56102d8565b005b34156100f257600080fd5b61011e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610384565b005b341561012b57600080fd5b61013361050f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018057600080fd5b610188610534565b6040518082815260200191505060405180910390f35b34156101a957600080fd5b6101b161053a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101fe57600080fd5b610206610560565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561025357600080fd5b61027460048080359060200190919080351515906020019091905050610586565b005b341561028157600080fd5b610297600480803590602001909190505061069c565b005b34156102a457600080fd5b6102d0600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506107d0565b005b60035481565b600560009054906101000a900460ff161515156102f457600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050156103825761dead73ffffffffffffffffffffffffffffffffffffffff16ff5b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103df57600080fd5b60008173ffffffffffffffffffffffffffffffffffffffff161415151561040557600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa2ea9883a321a3e97b8266c2b078bfeec6d50c711ed71f874a90d500ae2eaf3681604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105e157600080fd5b600560009054906101000a900460ff1615156105fc57600080fd5b816004541015151561060d57600080fd5b81600481905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc833073ffffffffffffffffffffffffffffffffffffffff1631039081150290604051600060405180830381858888f193505050508061068d575080155b151561069857600080fd5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106f757600080fd5b600560009054906101000a900460ff16151561071257600080fd5b6000600560006101000a81548160ff02191690831515021790555061dead73ffffffffffffffffffffffffffffffffffffffff166108fc6103e83073ffffffffffffffffffffffffffffffffffffffff1631846103e8030281151561077357fe5b049081150290604051600060405180830381858888f19350505050151561079957600080fd5b7fbb2ce2f51803bba16bc85282b47deeea9a5c6223eabea1077be696b3f265cf1360405160405180910390a16107cd6102d8565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561082b57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a7230582060cdc5b6293e075ec9579690c49180507c4a636e819f3ca31e7dd886433b2a510029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x974 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP PUSH2 0x89A DUP1 PUSH2 0xDA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x5B34410 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0xB5AB3D5 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2B20E397 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x3FA4F245 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x674F220F EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xB0C80972 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xBBE42771 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xFAAB9D39 EQ PUSH2 0x299 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE5 PUSH2 0x2D8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x384 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x133 PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x188 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B1 PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x206 PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x586 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x297 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x69C JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x7D0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO PUSH2 0x382 JUMPI PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xA2EA9883A321A3E97B8266C2B078BFEEC6D50C711ED71F874A90D500AE2EAF36 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x4 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SUB SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP DUP1 PUSH2 0x68D JUMPI POP DUP1 ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0x3E8 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE DUP5 PUSH2 0x3E8 SUB MUL DUP2 ISZERO ISZERO PUSH2 0x773 JUMPI INVALID JUMPDEST DIV SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xBB2CE2F51803BBA16BC85282B47DEEEA9A5C6223EABEA1077BE696B3F265CF13 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x7CD PUSH2 0x2D8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x82B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH1 0xCD 0xc5 0xb6 0x29 RETURNDATACOPY SMOD 0x5e 0xc9 JUMPI SWAP7 SWAP1 0xc4 SWAP2 DUP1 POP PUSH29 0x4A636E819F3CA31E7DD886433B2A510029000000000000000000000000 ",
							"sourceMap": "177:2264:0:-;;;649:192;;;;;;;;;;;;;;;;;;;;;;713:6;705:5;;:14;;;;;;;;;;;;;;;;;;742:10;730:9;;:22;;;;;;;;;;;;;;;;;;778:3;763:12;:18;;;;801:4;792:6;;:13;;;;;;;;;;;;;;;;;;824:9;816:5;:17;;;;649:192;177:2264;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305b34410146100a95780630b5ab3d5146100d257806313af4035146100e75780632b20e397146101205780633fa4f24514610175578063674f220f1461019e5780638da5cb5b146101f3578063b0c8097214610248578063bbe4277114610276578063faab9d3914610299575b600080fd5b34156100b457600080fd5b6100bc6102d2565b6040518082815260200191505060405180910390f35b34156100dd57600080fd5b6100e56102d8565b005b34156100f257600080fd5b61011e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610384565b005b341561012b57600080fd5b61013361050f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018057600080fd5b610188610534565b6040518082815260200191505060405180910390f35b34156101a957600080fd5b6101b161053a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101fe57600080fd5b610206610560565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561025357600080fd5b61027460048080359060200190919080351515906020019091905050610586565b005b341561028157600080fd5b610297600480803590602001909190505061069c565b005b34156102a457600080fd5b6102d0600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506107d0565b005b60035481565b600560009054906101000a900460ff161515156102f457600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050156103825761dead73ffffffffffffffffffffffffffffffffffffffff16ff5b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103df57600080fd5b60008173ffffffffffffffffffffffffffffffffffffffff161415151561040557600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa2ea9883a321a3e97b8266c2b078bfeec6d50c711ed71f874a90d500ae2eaf3681604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105e157600080fd5b600560009054906101000a900460ff1615156105fc57600080fd5b816004541015151561060d57600080fd5b81600481905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc833073ffffffffffffffffffffffffffffffffffffffff1631039081150290604051600060405180830381858888f193505050508061068d575080155b151561069857600080fd5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106f757600080fd5b600560009054906101000a900460ff16151561071257600080fd5b6000600560006101000a81548160ff02191690831515021790555061dead73ffffffffffffffffffffffffffffffffffffffff166108fc6103e83073ffffffffffffffffffffffffffffffffffffffff1631846103e8030281151561077357fe5b049081150290604051600060405180830381858888f19350505050151561079957600080fd5b7fbb2ce2f51803bba16bc85282b47deeea9a5c6223eabea1077be696b3f265cf1360405160405180910390a16107cd6102d8565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561082b57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a7230582060cdc5b6293e075ec9579690c49180507c4a636e819f3ca31e7dd886433b2a510029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x5B34410 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0xB5AB3D5 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2B20E397 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x3FA4F245 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x674F220F EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xB0C80972 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xBBE42771 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xFAAB9D39 EQ PUSH2 0x299 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE5 PUSH2 0x2D8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x384 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x133 PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x188 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B1 PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x206 PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x586 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x297 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x69C JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x7D0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO PUSH2 0x382 JUMPI PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xA2EA9883A321A3E97B8266C2B078BFEEC6D50C711ED71F874A90D500AE2EAF36 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x4 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SUB SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP DUP1 PUSH2 0x68D JUMPI POP DUP1 ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0x3E8 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE DUP5 PUSH2 0x3E8 SUB MUL DUP2 ISZERO ISZERO PUSH2 0x773 JUMPI INVALID JUMPDEST DIV SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xBB2CE2F51803BBA16BC85282B47DEEEA9A5C6223EABEA1077BE696B3F265CF13 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x7CD PUSH2 0x2D8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x82B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH1 0xCD 0xc5 0xb6 0x29 RETURNDATACOPY SMOD 0x5e 0xc9 JUMPI SWAP7 SWAP1 0xc4 SWAP2 DUP1 POP PUSH29 0x4A636E819F3CA31E7DD886433B2A510029000000000000000000000000 ",
							"sourceMap": "177:2264:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;334:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2052:386;;;;;;;;;;;;;;849:253;;;;;;;;;;;;;;;;;;;;;;;;;;;;239:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;365:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;297:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;270:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1226:339;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1729:222;;;;;;;;;;;;;;;;;;;;;;;;;;1110:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;334:24;;;;:::o;2052:386::-;2102:6;;;;;;;;;;;2101:7;2093:16;;;;;;;;2360:5;;;;;;;;;;;:10;;:24;2371:4;:12;;;2360:24;;;;;;;;;;;;;;;;;;;;;;;2356:75;;;224:6;2401:18;;;2356:75;2052:386::o;849:253::-;537:9;;;;;;;;;;;523:23;;:10;:23;;;515:32;;;;;;;;937:1;925:8;:13;;;;917:22;;;;;;;;966:5;;;;;;;;;;;950:13;;:21;;;;;;;;;;;;;;;;;;1053:8;1045:5;;:16;;;;;;;;;;;;;;;;;;1072:22;1085:8;1072:22;;;;;;;;;;;;;;;;;;;;;;849:253;:::o;239:24::-;;;;;;;;;;;;;:::o;365:17::-;;;;:::o;297:28::-;;;;;;;;;;;;;:::o;270:20::-;;;;;;;;;;;;;:::o;1226:339::-;537:9;;;;;;;;;;;523:23;;:10;:23;;;515:32;;;;;;;;614:6;;;;;;;;;;;606:15;;;;;;;;1402:8;1393:5;;:17;;1385:26;;;;;;;;1430:8;1422:5;:16;;;;1502:5;;;;;;;;;;;:10;;:35;1528:8;1513:4;:12;;;:23;1502:35;;;;;;;;;;;;;;;;;;;;;;;:54;;;;1542:14;1541:15;1502:54;1494:63;;;;;;;;1226:339;;:::o;1729:222::-;537:9;;;;;;;;;;;523:23;;:10;:23;;;515:32;;;;;;;;614:6;;;;;;;;;;;606:15;;;;;;;;1818:5;1809:6;;:14;;;;;;;;;;;;;;;;;;224:6;1842:9;;:53;1890:4;1876;:12;;;1861:11;1854:4;:18;1853:35;1852:42;;;;;;;;1842:53;;;;;;;;;;;;;;;;;;;;;;;1834:62;;;;;;;;1907:12;;;;;;;;;;1930:13;:11;:13::i;:::-;1729:222;:::o;1110:108::-;537:9;;;;;;;;;;;523:23;;:10;:23;;;515:32;;;;;;;;1198:12;1186:9;;:24;;;;;;;;;;;;;;;;;;1110:108;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "440400",
								"executionCost": "101345",
								"totalCost": "541745"
							},
							"external": {
								"closeDeed(uint256)": "infinite",
								"creationDate()": "386",
								"destroyDeed()": "infinite",
								"owner()": "566",
								"previousOwner()": "544",
								"registrar()": "500",
								"setBalance(uint256,bool)": "infinite",
								"setOwner(address)": "42374",
								"setRegistrar(address)": "20911",
								"value()": "474"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 177,
									"end": 2441,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 177,
									"end": 2441,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 177,
									"end": 2441,
									"name": "MSTORE"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "MLOAD"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "DUP1"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "PUSHSIZE"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "DUP4"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "CODECOPY"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "DUP2"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "ADD"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "MSTORE"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "DUP1"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "DUP1"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "MLOAD"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "SWAP1"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "ADD"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "SWAP1"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "SWAP2"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "SWAP1"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "POP"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "POP"
								},
								{
									"begin": 713,
									"end": 719,
									"name": "DUP1"
								},
								{
									"begin": 705,
									"end": 710,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 705,
									"end": 710,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 705,
									"end": 719,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 705,
									"end": 719,
									"name": "EXP"
								},
								{
									"begin": 705,
									"end": 719,
									"name": "DUP2"
								},
								{
									"begin": 705,
									"end": 719,
									"name": "SLOAD"
								},
								{
									"begin": 705,
									"end": 719,
									"name": "DUP2"
								},
								{
									"begin": 705,
									"end": 719,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 705,
									"end": 719,
									"name": "MUL"
								},
								{
									"begin": 705,
									"end": 719,
									"name": "NOT"
								},
								{
									"begin": 705,
									"end": 719,
									"name": "AND"
								},
								{
									"begin": 705,
									"end": 719,
									"name": "SWAP1"
								},
								{
									"begin": 705,
									"end": 719,
									"name": "DUP4"
								},
								{
									"begin": 705,
									"end": 719,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 705,
									"end": 719,
									"name": "AND"
								},
								{
									"begin": 705,
									"end": 719,
									"name": "MUL"
								},
								{
									"begin": 705,
									"end": 719,
									"name": "OR"
								},
								{
									"begin": 705,
									"end": 719,
									"name": "SWAP1"
								},
								{
									"begin": 705,
									"end": 719,
									"name": "SSTORE"
								},
								{
									"begin": 705,
									"end": 719,
									"name": "POP"
								},
								{
									"begin": 742,
									"end": 752,
									"name": "CALLER"
								},
								{
									"begin": 730,
									"end": 739,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 730,
									"end": 739,
									"name": "DUP1"
								},
								{
									"begin": 730,
									"end": 752,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 730,
									"end": 752,
									"name": "EXP"
								},
								{
									"begin": 730,
									"end": 752,
									"name": "DUP2"
								},
								{
									"begin": 730,
									"end": 752,
									"name": "SLOAD"
								},
								{
									"begin": 730,
									"end": 752,
									"name": "DUP2"
								},
								{
									"begin": 730,
									"end": 752,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 730,
									"end": 752,
									"name": "MUL"
								},
								{
									"begin": 730,
									"end": 752,
									"name": "NOT"
								},
								{
									"begin": 730,
									"end": 752,
									"name": "AND"
								},
								{
									"begin": 730,
									"end": 752,
									"name": "SWAP1"
								},
								{
									"begin": 730,
									"end": 752,
									"name": "DUP4"
								},
								{
									"begin": 730,
									"end": 752,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 730,
									"end": 752,
									"name": "AND"
								},
								{
									"begin": 730,
									"end": 752,
									"name": "MUL"
								},
								{
									"begin": 730,
									"end": 752,
									"name": "OR"
								},
								{
									"begin": 730,
									"end": 752,
									"name": "SWAP1"
								},
								{
									"begin": 730,
									"end": 752,
									"name": "SSTORE"
								},
								{
									"begin": 730,
									"end": 752,
									"name": "POP"
								},
								{
									"begin": 778,
									"end": 781,
									"name": "TIMESTAMP"
								},
								{
									"begin": 763,
									"end": 775,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 763,
									"end": 781,
									"name": "DUP2"
								},
								{
									"begin": 763,
									"end": 781,
									"name": "SWAP1"
								},
								{
									"begin": 763,
									"end": 781,
									"name": "SSTORE"
								},
								{
									"begin": 763,
									"end": 781,
									"name": "POP"
								},
								{
									"begin": 801,
									"end": 805,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 792,
									"end": 798,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 792,
									"end": 798,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 792,
									"end": 805,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 792,
									"end": 805,
									"name": "EXP"
								},
								{
									"begin": 792,
									"end": 805,
									"name": "DUP2"
								},
								{
									"begin": 792,
									"end": 805,
									"name": "SLOAD"
								},
								{
									"begin": 792,
									"end": 805,
									"name": "DUP2"
								},
								{
									"begin": 792,
									"end": 805,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 792,
									"end": 805,
									"name": "MUL"
								},
								{
									"begin": 792,
									"end": 805,
									"name": "NOT"
								},
								{
									"begin": 792,
									"end": 805,
									"name": "AND"
								},
								{
									"begin": 792,
									"end": 805,
									"name": "SWAP1"
								},
								{
									"begin": 792,
									"end": 805,
									"name": "DUP4"
								},
								{
									"begin": 792,
									"end": 805,
									"name": "ISZERO"
								},
								{
									"begin": 792,
									"end": 805,
									"name": "ISZERO"
								},
								{
									"begin": 792,
									"end": 805,
									"name": "MUL"
								},
								{
									"begin": 792,
									"end": 805,
									"name": "OR"
								},
								{
									"begin": 792,
									"end": 805,
									"name": "SWAP1"
								},
								{
									"begin": 792,
									"end": 805,
									"name": "SSTORE"
								},
								{
									"begin": 792,
									"end": 805,
									"name": "POP"
								},
								{
									"begin": 824,
									"end": 833,
									"name": "CALLVALUE"
								},
								{
									"begin": 816,
									"end": 821,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 816,
									"end": 833,
									"name": "DUP2"
								},
								{
									"begin": 816,
									"end": 833,
									"name": "SWAP1"
								},
								{
									"begin": 816,
									"end": 833,
									"name": "SSTORE"
								},
								{
									"begin": 816,
									"end": 833,
									"name": "POP"
								},
								{
									"begin": 649,
									"end": 841,
									"name": "POP"
								},
								{
									"begin": 177,
									"end": 2441,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 2441,
									"name": "DUP1"
								},
								{
									"begin": 177,
									"end": 2441,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 2441,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 177,
									"end": 2441,
									"name": "CODECOPY"
								},
								{
									"begin": 177,
									"end": 2441,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 177,
									"end": 2441,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582060cdc5b6293e075ec9579690c49180507c4a636e819f3ca31e7dd886433b2a510029",
									".code": [
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "MSTORE"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "LT"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "JUMPI"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "DIV"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "AND"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH",
											"value": "5B34410"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "EQ"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "JUMPI"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH",
											"value": "B5AB3D5"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "EQ"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "JUMPI"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH",
											"value": "13AF4035"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "EQ"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "JUMPI"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH",
											"value": "2B20E397"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "EQ"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "JUMPI"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH",
											"value": "3FA4F245"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "EQ"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "JUMPI"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH",
											"value": "674F220F"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "EQ"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "JUMPI"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "EQ"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "JUMPI"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH",
											"value": "B0C80972"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "EQ"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "JUMPI"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH",
											"value": "BBE42771"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "EQ"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "JUMPI"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH",
											"value": "FAAB9D39"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "EQ"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "JUMPI"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 2441,
											"name": "REVERT"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "CALLVALUE"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "ISZERO"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "REVERT"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "JUMP"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "MLOAD"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "DUP3"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "DUP2"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "MSTORE"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "ADD"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "SWAP2"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "POP"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "POP"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "MLOAD"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "SWAP2"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "SUB"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "SWAP1"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "RETURN"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "JUMPDEST"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "CALLVALUE"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "ISZERO"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "JUMPI"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "DUP1"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "REVERT"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "JUMPDEST"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "JUMP"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "JUMPDEST"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "STOP"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "JUMPDEST"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "CALLVALUE"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "ISZERO"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "JUMPI"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "DUP1"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "REVERT"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "JUMPDEST"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "DUP1"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "DUP1"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "AND"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "SWAP1"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "ADD"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "SWAP1"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "SWAP2"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "SWAP1"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "POP"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "POP"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "JUMP"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "JUMPDEST"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "STOP"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "JUMPDEST"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "CALLVALUE"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "ISZERO"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "JUMPI"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "DUP1"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "REVERT"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "JUMPDEST"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "JUMP"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "JUMPDEST"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "MLOAD"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "DUP1"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "DUP3"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "AND"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "AND"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "DUP2"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "MSTORE"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "ADD"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "SWAP2"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "POP"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "POP"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "MLOAD"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "DUP1"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "SWAP2"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "SUB"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "SWAP1"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "RETURN"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "JUMPDEST"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "CALLVALUE"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "ISZERO"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "JUMPI"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "DUP1"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "REVERT"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "JUMPDEST"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "JUMP"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "JUMPDEST"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MLOAD"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "DUP1"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "DUP3"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "DUP2"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MSTORE"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "ADD"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "SWAP2"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "POP"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "POP"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MLOAD"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "DUP1"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "SWAP2"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "SUB"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "SWAP1"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "RETURN"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "JUMPDEST"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "CALLVALUE"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "ISZERO"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "JUMPI"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "DUP1"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "REVERT"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "JUMPDEST"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "JUMP"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "JUMPDEST"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "MLOAD"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "DUP1"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "DUP3"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "AND"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "AND"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "DUP2"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "MSTORE"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "ADD"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "SWAP2"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "POP"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "POP"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "MLOAD"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "DUP1"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "SWAP2"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "SUB"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "SWAP1"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "RETURN"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "JUMPDEST"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "CALLVALUE"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "ISZERO"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "JUMPI"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "DUP1"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "REVERT"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "JUMPDEST"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "JUMP"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "JUMPDEST"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "MLOAD"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "DUP1"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "DUP3"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "AND"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "AND"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "DUP2"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "MSTORE"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "ADD"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "SWAP2"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "POP"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "POP"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "MLOAD"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "DUP1"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "SWAP2"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "SUB"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "SWAP1"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "RETURN"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "JUMPDEST"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "CALLVALUE"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "ISZERO"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "JUMPI"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "DUP1"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "REVERT"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "JUMPDEST"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "DUP1"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "DUP1"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "ADD"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "SWAP2"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "DUP1"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "ISZERO"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "ISZERO"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "ADD"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "SWAP2"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "JUMP"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "JUMPDEST"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "STOP"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "JUMPDEST"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "CALLVALUE"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "ISZERO"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "JUMPI"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "DUP1"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "REVERT"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "JUMPDEST"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "DUP1"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "DUP1"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "SWAP1"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "ADD"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "SWAP1"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "SWAP2"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "SWAP1"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "POP"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "POP"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "JUMP"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "JUMPDEST"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "STOP"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "JUMPDEST"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "CALLVALUE"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "ISZERO"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "JUMPI"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "DUP1"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "REVERT"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "JUMPDEST"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "DUP1"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "DUP1"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "AND"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "SWAP1"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "ADD"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "SWAP1"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "SWAP2"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "SWAP1"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "POP"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "POP"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "JUMP"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "JUMPDEST"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "STOP"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "SLOAD"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "DUP2"
										},
										{
											"begin": 334,
											"end": 358,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "JUMPDEST"
										},
										{
											"begin": 2102,
											"end": 2108,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2102,
											"end": 2108,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2108,
											"name": "SWAP1"
										},
										{
											"begin": 2102,
											"end": 2108,
											"name": "SLOAD"
										},
										{
											"begin": 2102,
											"end": 2108,
											"name": "SWAP1"
										},
										{
											"begin": 2102,
											"end": 2108,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2102,
											"end": 2108,
											"name": "EXP"
										},
										{
											"begin": 2102,
											"end": 2108,
											"name": "SWAP1"
										},
										{
											"begin": 2102,
											"end": 2108,
											"name": "DIV"
										},
										{
											"begin": 2102,
											"end": 2108,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2102,
											"end": 2108,
											"name": "AND"
										},
										{
											"begin": 2101,
											"end": 2108,
											"name": "ISZERO"
										},
										{
											"begin": 2093,
											"end": 2109,
											"name": "ISZERO"
										},
										{
											"begin": 2093,
											"end": 2109,
											"name": "ISZERO"
										},
										{
											"begin": 2093,
											"end": 2109,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2093,
											"end": 2109,
											"name": "JUMPI"
										},
										{
											"begin": 2093,
											"end": 2109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2109,
											"name": "DUP1"
										},
										{
											"begin": 2093,
											"end": 2109,
											"name": "REVERT"
										},
										{
											"begin": 2093,
											"end": 2109,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2093,
											"end": 2109,
											"name": "JUMPDEST"
										},
										{
											"begin": 2360,
											"end": 2365,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2360,
											"end": 2365,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2365,
											"name": "SWAP1"
										},
										{
											"begin": 2360,
											"end": 2365,
											"name": "SLOAD"
										},
										{
											"begin": 2360,
											"end": 2365,
											"name": "SWAP1"
										},
										{
											"begin": 2360,
											"end": 2365,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2360,
											"end": 2365,
											"name": "EXP"
										},
										{
											"begin": 2360,
											"end": 2365,
											"name": "SWAP1"
										},
										{
											"begin": 2360,
											"end": 2365,
											"name": "DIV"
										},
										{
											"begin": 2360,
											"end": 2365,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2360,
											"end": 2365,
											"name": "AND"
										},
										{
											"begin": 2360,
											"end": 2370,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2360,
											"end": 2370,
											"name": "AND"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 2371,
											"end": 2375,
											"name": "ADDRESS"
										},
										{
											"begin": 2371,
											"end": 2383,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2371,
											"end": 2383,
											"name": "AND"
										},
										{
											"begin": 2371,
											"end": 2383,
											"name": "BALANCE"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "SWAP1"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "DUP2"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "ISZERO"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "MUL"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "SWAP1"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "MLOAD"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "MLOAD"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "DUP1"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "DUP4"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "SUB"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "DUP2"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "DUP6"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "DUP9"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "DUP9"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "CALL"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "SWAP4"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "POP"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "POP"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "POP"
										},
										{
											"begin": 2360,
											"end": 2384,
											"name": "POP"
										},
										{
											"begin": 2356,
											"end": 2431,
											"name": "ISZERO"
										},
										{
											"begin": 2356,
											"end": 2431,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2356,
											"end": 2431,
											"name": "JUMPI"
										},
										{
											"begin": 224,
											"end": 230,
											"name": "PUSH",
											"value": "DEAD"
										},
										{
											"begin": 2401,
											"end": 2419,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2401,
											"end": 2419,
											"name": "AND"
										},
										{
											"begin": 2401,
											"end": 2419,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 2356,
											"end": 2431,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2356,
											"end": 2431,
											"name": "JUMPDEST"
										},
										{
											"begin": 2052,
											"end": 2438,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "JUMPDEST"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "DUP1"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "SLOAD"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "EXP"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "DIV"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "AND"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "AND"
										},
										{
											"begin": 523,
											"end": 533,
											"name": "CALLER"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "AND"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "EQ"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "ISZERO"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "ISZERO"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "JUMPI"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "DUP1"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "REVERT"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "JUMPDEST"
										},
										{
											"begin": 937,
											"end": 938,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 925,
											"end": 933,
											"name": "DUP2"
										},
										{
											"begin": 925,
											"end": 938,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 925,
											"end": 938,
											"name": "AND"
										},
										{
											"begin": 925,
											"end": 938,
											"name": "EQ"
										},
										{
											"begin": 925,
											"end": 938,
											"name": "ISZERO"
										},
										{
											"begin": 917,
											"end": 939,
											"name": "ISZERO"
										},
										{
											"begin": 917,
											"end": 939,
											"name": "ISZERO"
										},
										{
											"begin": 917,
											"end": 939,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 917,
											"end": 939,
											"name": "JUMPI"
										},
										{
											"begin": 917,
											"end": 939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 917,
											"end": 939,
											"name": "DUP1"
										},
										{
											"begin": 917,
											"end": 939,
											"name": "REVERT"
										},
										{
											"begin": 917,
											"end": 939,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 917,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 966,
											"end": 971,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 966,
											"end": 971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 966,
											"end": 971,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 971,
											"name": "SLOAD"
										},
										{
											"begin": 966,
											"end": 971,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 971,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 966,
											"end": 971,
											"name": "EXP"
										},
										{
											"begin": 966,
											"end": 971,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 971,
											"name": "DIV"
										},
										{
											"begin": 966,
											"end": 971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 966,
											"end": 971,
											"name": "AND"
										},
										{
											"begin": 950,
											"end": 963,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 950,
											"end": 963,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 950,
											"end": 971,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 950,
											"end": 971,
											"name": "EXP"
										},
										{
											"begin": 950,
											"end": 971,
											"name": "DUP2"
										},
										{
											"begin": 950,
											"end": 971,
											"name": "SLOAD"
										},
										{
											"begin": 950,
											"end": 971,
											"name": "DUP2"
										},
										{
											"begin": 950,
											"end": 971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 950,
											"end": 971,
											"name": "MUL"
										},
										{
											"begin": 950,
											"end": 971,
											"name": "NOT"
										},
										{
											"begin": 950,
											"end": 971,
											"name": "AND"
										},
										{
											"begin": 950,
											"end": 971,
											"name": "SWAP1"
										},
										{
											"begin": 950,
											"end": 971,
											"name": "DUP4"
										},
										{
											"begin": 950,
											"end": 971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 950,
											"end": 971,
											"name": "AND"
										},
										{
											"begin": 950,
											"end": 971,
											"name": "MUL"
										},
										{
											"begin": 950,
											"end": 971,
											"name": "OR"
										},
										{
											"begin": 950,
											"end": 971,
											"name": "SWAP1"
										},
										{
											"begin": 950,
											"end": 971,
											"name": "SSTORE"
										},
										{
											"begin": 950,
											"end": 971,
											"name": "POP"
										},
										{
											"begin": 1053,
											"end": 1061,
											"name": "DUP1"
										},
										{
											"begin": 1045,
											"end": 1050,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1045,
											"end": 1050,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "EXP"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "DUP2"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "SLOAD"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "DUP2"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "MUL"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "NOT"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "AND"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "SWAP1"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "DUP4"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "AND"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "MUL"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "OR"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "SWAP1"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "SSTORE"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "POP"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "PUSH",
											"value": "A2EA9883A321A3E97B8266C2B078BFEEC6D50C711ED71F874A90D500AE2EAF36"
										},
										{
											"begin": 1085,
											"end": 1093,
											"name": "DUP2"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "MLOAD"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "DUP1"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "DUP3"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "AND"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "AND"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "DUP2"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "MSTORE"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "ADD"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "SWAP2"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "POP"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "POP"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "MLOAD"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "DUP1"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "SWAP2"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "SUB"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "SWAP1"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "LOG1"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "POP"
										},
										{
											"begin": 849,
											"end": 1102,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "JUMPDEST"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "DUP1"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "SWAP1"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "SLOAD"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "SWAP1"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "EXP"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "SWAP1"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "DIV"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "AND"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "DUP2"
										},
										{
											"begin": 239,
											"end": 263,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "JUMPDEST"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "SLOAD"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "DUP2"
										},
										{
											"begin": 365,
											"end": 382,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "JUMPDEST"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "SWAP1"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "SLOAD"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "SWAP1"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "EXP"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "SWAP1"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "DIV"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "AND"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "DUP2"
										},
										{
											"begin": 297,
											"end": 325,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "JUMPDEST"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "SWAP1"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "SLOAD"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "SWAP1"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "EXP"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "SWAP1"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "DIV"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "AND"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "DUP2"
										},
										{
											"begin": 270,
											"end": 290,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "JUMPDEST"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "DUP1"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "SLOAD"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "EXP"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "DIV"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "AND"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "AND"
										},
										{
											"begin": 523,
											"end": 533,
											"name": "CALLER"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "AND"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "EQ"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "ISZERO"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "ISZERO"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "JUMPI"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "DUP1"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "REVERT"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "JUMPDEST"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "SWAP1"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "SLOAD"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "SWAP1"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "EXP"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "SWAP1"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "DIV"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "AND"
										},
										{
											"begin": 606,
											"end": 621,
											"name": "ISZERO"
										},
										{
											"begin": 606,
											"end": 621,
											"name": "ISZERO"
										},
										{
											"begin": 606,
											"end": 621,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 606,
											"end": 621,
											"name": "JUMPI"
										},
										{
											"begin": 606,
											"end": 621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 606,
											"end": 621,
											"name": "DUP1"
										},
										{
											"begin": 606,
											"end": 621,
											"name": "REVERT"
										},
										{
											"begin": 606,
											"end": 621,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 606,
											"end": 621,
											"name": "JUMPDEST"
										},
										{
											"begin": 1402,
											"end": 1410,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1398,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1393,
											"end": 1398,
											"name": "SLOAD"
										},
										{
											"begin": 1393,
											"end": 1410,
											"name": "LT"
										},
										{
											"begin": 1393,
											"end": 1410,
											"name": "ISZERO"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "ISZERO"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "ISZERO"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "JUMPI"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "DUP1"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "REVERT"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "JUMPDEST"
										},
										{
											"begin": 1430,
											"end": 1438,
											"name": "DUP2"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1422,
											"end": 1438,
											"name": "DUP2"
										},
										{
											"begin": 1422,
											"end": 1438,
											"name": "SWAP1"
										},
										{
											"begin": 1422,
											"end": 1438,
											"name": "SSTORE"
										},
										{
											"begin": 1422,
											"end": 1438,
											"name": "POP"
										},
										{
											"begin": 1502,
											"end": 1507,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1502,
											"end": 1507,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1502,
											"end": 1507,
											"name": "SWAP1"
										},
										{
											"begin": 1502,
											"end": 1507,
											"name": "SLOAD"
										},
										{
											"begin": 1502,
											"end": 1507,
											"name": "SWAP1"
										},
										{
											"begin": 1502,
											"end": 1507,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1502,
											"end": 1507,
											"name": "EXP"
										},
										{
											"begin": 1502,
											"end": 1507,
											"name": "SWAP1"
										},
										{
											"begin": 1502,
											"end": 1507,
											"name": "DIV"
										},
										{
											"begin": 1502,
											"end": 1507,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1502,
											"end": 1507,
											"name": "AND"
										},
										{
											"begin": 1502,
											"end": 1512,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1502,
											"end": 1512,
											"name": "AND"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1528,
											"end": 1536,
											"name": "DUP4"
										},
										{
											"begin": 1513,
											"end": 1517,
											"name": "ADDRESS"
										},
										{
											"begin": 1513,
											"end": 1525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1525,
											"name": "AND"
										},
										{
											"begin": 1513,
											"end": 1525,
											"name": "BALANCE"
										},
										{
											"begin": 1513,
											"end": 1536,
											"name": "SUB"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "SWAP1"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "DUP2"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "ISZERO"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "MUL"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "SWAP1"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "MLOAD"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "MLOAD"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "DUP1"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "DUP4"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "SUB"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "DUP2"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "DUP6"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "DUP9"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "DUP9"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "CALL"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "SWAP4"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "POP"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "POP"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "POP"
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "POP"
										},
										{
											"begin": 1502,
											"end": 1556,
											"name": "DUP1"
										},
										{
											"begin": 1502,
											"end": 1556,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1502,
											"end": 1556,
											"name": "JUMPI"
										},
										{
											"begin": 1502,
											"end": 1556,
											"name": "POP"
										},
										{
											"begin": 1542,
											"end": 1556,
											"name": "DUP1"
										},
										{
											"begin": 1541,
											"end": 1556,
											"name": "ISZERO"
										},
										{
											"begin": 1502,
											"end": 1556,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 1502,
											"end": 1556,
											"name": "JUMPDEST"
										},
										{
											"begin": 1494,
											"end": 1557,
											"name": "ISZERO"
										},
										{
											"begin": 1494,
											"end": 1557,
											"name": "ISZERO"
										},
										{
											"begin": 1494,
											"end": 1557,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 1494,
											"end": 1557,
											"name": "JUMPI"
										},
										{
											"begin": 1494,
											"end": 1557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1557,
											"name": "DUP1"
										},
										{
											"begin": 1494,
											"end": 1557,
											"name": "REVERT"
										},
										{
											"begin": 1494,
											"end": 1557,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 1494,
											"end": 1557,
											"name": "JUMPDEST"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1565,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "JUMPDEST"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "DUP1"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "SLOAD"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "EXP"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "DIV"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "AND"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "AND"
										},
										{
											"begin": 523,
											"end": 533,
											"name": "CALLER"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "AND"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "EQ"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "ISZERO"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "ISZERO"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "JUMPI"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "DUP1"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "REVERT"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "JUMPDEST"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "SWAP1"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "SLOAD"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "SWAP1"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "EXP"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "SWAP1"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "DIV"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "AND"
										},
										{
											"begin": 606,
											"end": 621,
											"name": "ISZERO"
										},
										{
											"begin": 606,
											"end": 621,
											"name": "ISZERO"
										},
										{
											"begin": 606,
											"end": 621,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 606,
											"end": 621,
											"name": "JUMPI"
										},
										{
											"begin": 606,
											"end": 621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 606,
											"end": 621,
											"name": "DUP1"
										},
										{
											"begin": 606,
											"end": 621,
											"name": "REVERT"
										},
										{
											"begin": 606,
											"end": 621,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 606,
											"end": 621,
											"name": "JUMPDEST"
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1815,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1809,
											"end": 1815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "EXP"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "DUP2"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "SLOAD"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "DUP2"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "MUL"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "NOT"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "AND"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "SWAP1"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "DUP4"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "ISZERO"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "ISZERO"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "MUL"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "OR"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "SWAP1"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "SSTORE"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "POP"
										},
										{
											"begin": 224,
											"end": 230,
											"name": "PUSH",
											"value": "DEAD"
										},
										{
											"begin": 1842,
											"end": 1851,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1842,
											"end": 1851,
											"name": "AND"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1890,
											"end": 1894,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 1876,
											"end": 1880,
											"name": "ADDRESS"
										},
										{
											"begin": 1876,
											"end": 1888,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1876,
											"end": 1888,
											"name": "AND"
										},
										{
											"begin": 1876,
											"end": 1888,
											"name": "BALANCE"
										},
										{
											"begin": 1861,
											"end": 1872,
											"name": "DUP5"
										},
										{
											"begin": 1854,
											"end": 1858,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 1854,
											"end": 1872,
											"name": "SUB"
										},
										{
											"begin": 1853,
											"end": 1888,
											"name": "MUL"
										},
										{
											"begin": 1852,
											"end": 1894,
											"name": "DUP2"
										},
										{
											"begin": 1852,
											"end": 1894,
											"name": "ISZERO"
										},
										{
											"begin": 1852,
											"end": 1894,
											"name": "ISZERO"
										},
										{
											"begin": 1852,
											"end": 1894,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1852,
											"end": 1894,
											"name": "JUMPI"
										},
										{
											"begin": 1852,
											"end": 1894,
											"name": "INVALID"
										},
										{
											"begin": 1852,
											"end": 1894,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 1852,
											"end": 1894,
											"name": "JUMPDEST"
										},
										{
											"begin": 1852,
											"end": 1894,
											"name": "DIV"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "SWAP1"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "DUP2"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "ISZERO"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "MUL"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "SWAP1"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "MLOAD"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "MLOAD"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "DUP1"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "DUP4"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "SUB"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "DUP2"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "DUP6"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "DUP9"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "DUP9"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "CALL"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "SWAP4"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "POP"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "POP"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "POP"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "POP"
										},
										{
											"begin": 1834,
											"end": 1896,
											"name": "ISZERO"
										},
										{
											"begin": 1834,
											"end": 1896,
											"name": "ISZERO"
										},
										{
											"begin": 1834,
											"end": 1896,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1834,
											"end": 1896,
											"name": "JUMPI"
										},
										{
											"begin": 1834,
											"end": 1896,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1896,
											"name": "DUP1"
										},
										{
											"begin": 1834,
											"end": 1896,
											"name": "REVERT"
										},
										{
											"begin": 1834,
											"end": 1896,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 1834,
											"end": 1896,
											"name": "JUMPDEST"
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "PUSH",
											"value": "BB2CE2F51803BBA16BC85282B47DEEEA9A5C6223EABEA1077BE696B3F265CF13"
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "MLOAD"
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "MLOAD"
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "DUP1"
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "SWAP2"
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "SUB"
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "LOG1"
										},
										{
											"begin": 1930,
											"end": 1943,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 1930,
											"end": 1941,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1930,
											"end": 1943,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1930,
											"end": 1943,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 1930,
											"end": 1943,
											"name": "JUMPDEST"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "POP"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "JUMPDEST"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "DUP1"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "SLOAD"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "EXP"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "DIV"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "AND"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "AND"
										},
										{
											"begin": 523,
											"end": 533,
											"name": "CALLER"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "AND"
										},
										{
											"begin": 523,
											"end": 546,
											"name": "EQ"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "ISZERO"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "ISZERO"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "JUMPI"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "DUP1"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "REVERT"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "JUMPDEST"
										},
										{
											"begin": 1198,
											"end": 1210,
											"name": "DUP1"
										},
										{
											"begin": 1186,
											"end": 1195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1195,
											"name": "DUP1"
										},
										{
											"begin": 1186,
											"end": 1210,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1186,
											"end": 1210,
											"name": "EXP"
										},
										{
											"begin": 1186,
											"end": 1210,
											"name": "DUP2"
										},
										{
											"begin": 1186,
											"end": 1210,
											"name": "SLOAD"
										},
										{
											"begin": 1186,
											"end": 1210,
											"name": "DUP2"
										},
										{
											"begin": 1186,
											"end": 1210,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1186,
											"end": 1210,
											"name": "MUL"
										},
										{
											"begin": 1186,
											"end": 1210,
											"name": "NOT"
										},
										{
											"begin": 1186,
											"end": 1210,
											"name": "AND"
										},
										{
											"begin": 1186,
											"end": 1210,
											"name": "SWAP1"
										},
										{
											"begin": 1186,
											"end": 1210,
											"name": "DUP4"
										},
										{
											"begin": 1186,
											"end": 1210,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1186,
											"end": 1210,
											"name": "AND"
										},
										{
											"begin": 1186,
											"end": 1210,
											"name": "MUL"
										},
										{
											"begin": 1186,
											"end": 1210,
											"name": "OR"
										},
										{
											"begin": 1186,
											"end": 1210,
											"name": "SWAP1"
										},
										{
											"begin": 1186,
											"end": 1210,
											"name": "SSTORE"
										},
										{
											"begin": 1186,
											"end": 1210,
											"name": "POP"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "POP"
										},
										{
											"begin": 1110,
											"end": 1218,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"closeDeed(uint256)": "bbe42771",
							"creationDate()": "05b34410",
							"destroyDeed()": "0b5ab3d5",
							"owner()": "8da5cb5b",
							"previousOwner()": "674f220f",
							"registrar()": "2b20e397",
							"setBalance(uint256,bool)": "b0c80972",
							"setOwner(address)": "13af4035",
							"setRegistrar(address)": "faab9d39",
							"value()": "3fa4f245"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"creationDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroyDeed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registrar\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"previousOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newValue\",\"type\":\"uint256\"},{\"name\":\"throwOnFailure\",\"type\":\"bool\"}],\"name\":\"setBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"refundRatio\",\"type\":\"uint256\"}],\"name\":\"closeDeed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newRegistrar\",\"type\":\"address\"}],\"name\":\"setRegistrar\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DeedClosed\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"closeDeed(uint256)\":{\"details\":\"Close a deed and refund a specified fraction of the bid value\\r \",\"params\":{\"refundRatio\":\"The amount*1/1000 to refund\\r\"}},\"destroyDeed()\":{\"details\":\"Close a deed and refund a specified fraction of the bid value\\r\"}},\"title\":\"Deed to hold ether in exchange for ownership of a node\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Deed.sol\":\"Deed\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Deed.sol\":{\"keccak256\":\"0xd630253a978cb8e6615dd2f0bf446b780456d81499cb2b8e978fe3787ff1ca7d\",\"urls\":[\"bzzr://d22ca1bc4c93affa28cebcd0be916eb67565de34c424f0ae756e562797698e9c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "Deed.sol:5:1: Warning: Source file does not specify required compiler version!Consider adding \"pragma solidity ^0.4.18\ncontract Deed {\r\n^\nSpanning multiple lines.\n",
				"message": "Source file does not specify required compiler version!Consider adding \"pragma solidity ^0.4.18",
				"severity": "warning",
				"type": "Warning"
			}
		],
		"sources": {
			"Deed.sol": {
				"ast": {
					"absolutePath": "Deed.sol",
					"exportedSymbols": {
						"Deed": [
							198
						]
					},
					"id": 199,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Deed to hold ether in exchange for ownership of a node\r\n@dev The deed can be controlled only by the registrar and can only send ether back to the owner.\r",
							"fullyImplemented": true,
							"id": 198,
							"linearizedBaseContracts": [
								198
							],
							"name": "Deed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 3,
									"name": "burn",
									"nodeType": "VariableDeclaration",
									"scope": 198,
									"src": "200:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "200:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307864656164",
										"id": 2,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "224:6:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57005_by_1",
											"typeString": "int_const 57005"
										},
										"value": "0xdead"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"name": "registrar",
									"nodeType": "VariableDeclaration",
									"scope": 198,
									"src": "239:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "239:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 7,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 198,
									"src": "270:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "270:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"name": "previousOwner",
									"nodeType": "VariableDeclaration",
									"scope": 198,
									"src": "297:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 8,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "297:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"name": "creationDate",
									"nodeType": "VariableDeclaration",
									"scope": 198,
									"src": "334:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "334:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"name": "value",
									"nodeType": "VariableDeclaration",
									"scope": 198,
									"src": "365:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "365:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 15,
									"name": "active",
									"nodeType": "VariableDeclaration",
									"scope": 198,
									"src": "391:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 14,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "391:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 19,
									"name": "OwnerChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "430:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "429:18:0"
									},
									"src": "411:37:0"
								},
								{
									"anonymous": false,
									"id": 21,
									"name": "DeedClosed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "470:2:0"
									},
									"src": "454:19:0"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "504:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 24,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "523:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 25,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "523:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 26,
																"name": "registrar",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "537:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "523:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 23,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "515:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "515:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "515:32:0"
											},
											{
												"id": 30,
												"nodeType": "PlaceholderStatement",
												"src": "558:1:0"
											}
										]
									},
									"id": 32,
									"name": "onlyRegistrar",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "504:0:0"
									},
									"src": "481:86:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "595:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 35,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "614:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 34,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "606:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "606:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "606:15:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "632:1:0"
											}
										]
									},
									"id": 40,
									"name": "onlyActive",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "595:0:0"
									},
									"src": "575:66:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "694:147:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 45,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "705:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 46,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "713:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "705:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "705:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 49,
														"name": "registrar",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "730:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 50,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "742:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "742:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "730:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "730:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 54,
														"name": "creationDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "763:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 55,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "778:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "763:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "763:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 58,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "792:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "801:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "792:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "792:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 62,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "816:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 63,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "824:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "824:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "816:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "816:17:0"
											}
										]
									},
									"id": 68,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Deed",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "663:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "662:16:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "694:0:0"
									},
									"scope": 198,
									"src": "649:192:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "906:196:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 76,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "925:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "937:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "925:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 75,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "917:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "917:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "917:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 81,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "950:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 82,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "966:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "950:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "950:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 85,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1045:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 86,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "1053:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1045:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "1045:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 90,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "1085:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 89,
														"name": "OwnerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1072:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1072:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "1072:22:0"
											}
										]
									},
									"id": 94,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 73,
											"modifierName": {
												"argumentTypes": null,
												"id": 72,
												"name": "onlyRegistrar",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 32,
												"src": "892:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "892:13:0"
										}
									],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "867:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "866:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:0:0"
									},
									"scope": 198,
									"src": "849:253:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "1175:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 101,
														"name": "registrar",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1186:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 102,
														"name": "newRegistrar",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "1198:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1186:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1186:24:0"
											}
										]
									},
									"id": 106,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 99,
											"modifierName": {
												"argumentTypes": null,
												"id": 98,
												"name": "onlyRegistrar",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 32,
												"src": "1161:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1161:13:0"
										}
									],
									"name": "setRegistrar",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"name": "newRegistrar",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1132:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1131:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1175:0:0"
									},
									"scope": 198,
									"src": "1110:108:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "1314:251:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 118,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "1393:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 119,
																"name": "newValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "1402:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1393:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "1385:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "1385:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 123,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1422:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 124,
														"name": "newValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "1430:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1422:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "1422:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 130,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "1513:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Deed_$198",
																					"typeString": "contract Deed"
																				}
																			},
																			"id": 131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1513:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 132,
																			"name": "newValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 108,
																			"src": "1528:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1513:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 128,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 7,
																		"src": "1502:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "send",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1502:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) returns (bool)"
																	}
																},
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1502:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1541:15:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 135,
																	"name": "throwOnFailure",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "1542:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1502:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "1494:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1494:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "1494:63:0"
											}
										]
									},
									"id": 141,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 113,
											"modifierName": {
												"argumentTypes": null,
												"id": 112,
												"name": "onlyRegistrar",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 32,
												"src": "1289:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1289:13:0"
										},
										{
											"arguments": [],
											"id": 115,
											"modifierName": {
												"argumentTypes": null,
												"id": 114,
												"name": "onlyActive",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 40,
												"src": "1303:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1303:10:0"
										}
									],
									"name": "setBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"name": "newValue",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1246:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"name": "throwOnFailure",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1261:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1261:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1245:36:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:0"
									},
									"scope": 198,
									"src": "1226:339:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "1798:153:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 150,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1809:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1818:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1809:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1809:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 163,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 159,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"hexValue": "31303030",
																								"id": 157,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1854:4:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000_by_1",
																									"typeString": "int_const 1000"
																								},
																								"value": "1000"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 158,
																								"name": "refundRatio",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 143,
																								"src": "1861:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1854:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 160,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1853:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 161,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 221,
																						"src": "1876:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_Deed_$198",
																							"typeString": "contract Deed"
																						}
																					},
																					"id": 162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "balance",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "1876:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1853:35:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 164,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1852:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31303030",
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1890:4:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	},
																	"src": "1852:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 155,
																	"name": "burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "1842:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "send",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1842:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) returns (bool)"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1842:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "1834:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1834:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "1834:62:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 170,
														"name": "DeedClosed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1907:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1907:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1907:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "destroyDeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "1930:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1930:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "1930:13:0"
											}
										]
									},
									"id": 177,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 146,
											"modifierName": {
												"argumentTypes": null,
												"id": 145,
												"name": "onlyRegistrar",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 32,
												"src": "1773:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1773:13:0"
										},
										{
											"arguments": [],
											"id": 148,
											"modifierName": {
												"argumentTypes": null,
												"id": 147,
												"name": "onlyActive",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 40,
												"src": "1787:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1787:10:0"
										}
									],
									"name": "closeDeed",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"name": "refundRatio",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "1748:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1748:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1747:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1798:0:0"
									},
									"scope": 198,
									"src": "1729:222:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2082:356:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2101:7:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 181,
																"name": "active",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "2102:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2093:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "2093:16:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 187,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "2371:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Deed_$198",
																	"typeString": "contract Deed"
																}
															},
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2371:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 185,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "2360:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "send",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2360:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) returns (bool)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2360:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 195,
												"nodeType": "IfStatement",
												"src": "2356:75:0",
												"trueBody": {
													"id": 194,
													"nodeType": "Block",
													"src": "2386:45:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 191,
																		"name": "burn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "2414:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 190,
																	"name": "selfdestruct",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "2401:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2401:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 193,
															"nodeType": "ExpressionStatement",
															"src": "2401:18:0"
														}
													]
												}
											}
										]
									},
									"id": 197,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "destroyDeed",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2072:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:0:0"
									},
									"scope": 198,
									"src": "2052:386:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 199,
							"src": "177:2264:0"
						}
					],
					"src": "177:2266:0"
				},
				"id": 0,
				"legacyAST": {
					"attributes": {
						"absolutePath": "Deed.sol",
						"exportedSymbols": {
							"Deed": [
								198
							]
						}
					},
					"children": [
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": "@title Deed to hold ether in exchange for ownership of a node\r\n@dev The deed can be controlled only by the registrar and can only send ether back to the owner.\r",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									198
								],
								"name": "Deed",
								"scope": 199
							},
							"children": [
								{
									"attributes": {
										"constant": true,
										"name": "burn",
										"scope": 198,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 1,
											"name": "ElementaryTypeName",
											"src": "200:7:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "307864656164",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "number",
												"type": "int_const 57005",
												"value": "0xdead"
											},
											"id": 2,
											"name": "Literal",
											"src": "224:6:0"
										}
									],
									"id": 3,
									"name": "VariableDeclaration",
									"src": "200:30:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "registrar",
										"scope": 198,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 4,
											"name": "ElementaryTypeName",
											"src": "239:7:0"
										}
									],
									"id": 5,
									"name": "VariableDeclaration",
									"src": "239:24:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "owner",
										"scope": 198,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 6,
											"name": "ElementaryTypeName",
											"src": "270:7:0"
										}
									],
									"id": 7,
									"name": "VariableDeclaration",
									"src": "270:20:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "previousOwner",
										"scope": 198,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 8,
											"name": "ElementaryTypeName",
											"src": "297:7:0"
										}
									],
									"id": 9,
									"name": "VariableDeclaration",
									"src": "297:28:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "creationDate",
										"scope": 198,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 10,
											"name": "ElementaryTypeName",
											"src": "334:4:0"
										}
									],
									"id": 11,
									"name": "VariableDeclaration",
									"src": "334:24:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "value",
										"scope": 198,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 12,
											"name": "ElementaryTypeName",
											"src": "365:4:0"
										}
									],
									"id": 13,
									"name": "VariableDeclaration",
									"src": "365:17:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "active",
										"scope": 198,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "bool",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "bool",
												"type": "bool"
											},
											"id": 14,
											"name": "ElementaryTypeName",
											"src": "391:4:0"
										}
									],
									"id": 15,
									"name": "VariableDeclaration",
									"src": "391:11:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "OwnerChanged"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "newOwner",
														"scope": 19,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 16,
															"name": "ElementaryTypeName",
															"src": "430:7:0"
														}
													],
													"id": 17,
													"name": "VariableDeclaration",
													"src": "430:16:0"
												}
											],
											"id": 18,
											"name": "ParameterList",
											"src": "429:18:0"
										}
									],
									"id": 19,
									"name": "EventDefinition",
									"src": "411:37:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "DeedClosed"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 20,
											"name": "ParameterList",
											"src": "470:2:0"
										}
									],
									"id": 21,
									"name": "EventDefinition",
									"src": "454:19:0"
								},
								{
									"attributes": {
										"name": "onlyRegistrar",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 22,
											"name": "ParameterList",
											"src": "504:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 213,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 23,
																	"name": "Identifier",
																	"src": "515:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 210,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 24,
																					"name": "Identifier",
																					"src": "523:3:0"
																				}
																			],
																			"id": 25,
																			"name": "MemberAccess",
																			"src": "523:10:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 5,
																				"type": "address",
																				"value": "registrar"
																			},
																			"id": 26,
																			"name": "Identifier",
																			"src": "537:9:0"
																		}
																	],
																	"id": 27,
																	"name": "BinaryOperation",
																	"src": "523:23:0"
																}
															],
															"id": 28,
															"name": "FunctionCall",
															"src": "515:32:0"
														}
													],
													"id": 29,
													"name": "ExpressionStatement",
													"src": "515:32:0"
												},
												{
													"id": 30,
													"name": "PlaceholderStatement",
													"src": "558:1:0"
												}
											],
											"id": 31,
											"name": "Block",
											"src": "504:63:0"
										}
									],
									"id": 32,
									"name": "ModifierDefinition",
									"src": "481:86:0"
								},
								{
									"attributes": {
										"name": "onlyActive",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 33,
											"name": "ParameterList",
											"src": "595:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 213,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 34,
																	"name": "Identifier",
																	"src": "606:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 15,
																		"type": "bool",
																		"value": "active"
																	},
																	"id": 35,
																	"name": "Identifier",
																	"src": "614:6:0"
																}
															],
															"id": 36,
															"name": "FunctionCall",
															"src": "606:15:0"
														}
													],
													"id": 37,
													"name": "ExpressionStatement",
													"src": "606:15:0"
												},
												{
													"id": 38,
													"name": "PlaceholderStatement",
													"src": "632:1:0"
												}
											],
											"id": 39,
											"name": "Block",
											"src": "595:46:0"
										}
									],
									"id": 40,
									"name": "ModifierDefinition",
									"src": "575:66:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "Deed",
										"payable": true,
										"scope": 198,
										"stateMutability": "payable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 68,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 41,
															"name": "ElementaryTypeName",
															"src": "663:7:0"
														}
													],
													"id": 42,
													"name": "VariableDeclaration",
													"src": "663:14:0"
												}
											],
											"id": 43,
											"name": "ParameterList",
											"src": "662:16:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 44,
											"name": "ParameterList",
											"src": "694:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 7,
																		"type": "address",
																		"value": "owner"
																	},
																	"id": 45,
																	"name": "Identifier",
																	"src": "705:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 42,
																		"type": "address",
																		"value": "_owner"
																	},
																	"id": 46,
																	"name": "Identifier",
																	"src": "713:6:0"
																}
															],
															"id": 47,
															"name": "Assignment",
															"src": "705:14:0"
														}
													],
													"id": 48,
													"name": "ExpressionStatement",
													"src": "705:14:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 5,
																		"type": "address",
																		"value": "registrar"
																	},
																	"id": 49,
																	"name": "Identifier",
																	"src": "730:9:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 210,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 50,
																			"name": "Identifier",
																			"src": "742:3:0"
																		}
																	],
																	"id": 51,
																	"name": "MemberAccess",
																	"src": "742:10:0"
																}
															],
															"id": 52,
															"name": "Assignment",
															"src": "730:22:0"
														}
													],
													"id": 53,
													"name": "ExpressionStatement",
													"src": "730:22:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 11,
																		"type": "uint256",
																		"value": "creationDate"
																	},
																	"id": 54,
																	"name": "Identifier",
																	"src": "763:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 212,
																		"type": "uint256",
																		"value": "now"
																	},
																	"id": 55,
																	"name": "Identifier",
																	"src": "778:3:0"
																}
															],
															"id": 56,
															"name": "Assignment",
															"src": "763:18:0"
														}
													],
													"id": 57,
													"name": "ExpressionStatement",
													"src": "763:18:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 15,
																		"type": "bool",
																		"value": "active"
																	},
																	"id": 58,
																	"name": "Identifier",
																	"src": "792:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 59,
																	"name": "Literal",
																	"src": "801:4:0"
																}
															],
															"id": 60,
															"name": "Assignment",
															"src": "792:13:0"
														}
													],
													"id": 61,
													"name": "ExpressionStatement",
													"src": "792:13:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 13,
																		"type": "uint256",
																		"value": "value"
																	},
																	"id": 62,
																	"name": "Identifier",
																	"src": "816:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "value",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 210,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 63,
																			"name": "Identifier",
																			"src": "824:3:0"
																		}
																	],
																	"id": 64,
																	"name": "MemberAccess",
																	"src": "824:9:0"
																}
															],
															"id": 65,
															"name": "Assignment",
															"src": "816:17:0"
														}
													],
													"id": 66,
													"name": "ExpressionStatement",
													"src": "816:17:0"
												}
											],
											"id": 67,
											"name": "Block",
											"src": "694:147:0"
										}
									],
									"id": 68,
									"name": "FunctionDefinition",
									"src": "649:192:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "setOwner",
										"payable": false,
										"scope": 198,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "newOwner",
														"scope": 94,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 69,
															"name": "ElementaryTypeName",
															"src": "867:7:0"
														}
													],
													"id": 70,
													"name": "VariableDeclaration",
													"src": "867:16:0"
												}
											],
											"id": 71,
											"name": "ParameterList",
											"src": "866:18:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 74,
											"name": "ParameterList",
											"src": "906:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 32,
														"type": "modifier ()",
														"value": "onlyRegistrar"
													},
													"id": 72,
													"name": "Identifier",
													"src": "892:13:0"
												}
											],
											"id": 73,
											"name": "ModifierInvocation",
											"src": "892:13:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 213,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 75,
																	"name": "Identifier",
																	"src": "917:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 70,
																				"type": "address",
																				"value": "newOwner"
																			},
																			"id": 76,
																			"name": "Identifier",
																			"src": "925:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 77,
																			"name": "Literal",
																			"src": "937:1:0"
																		}
																	],
																	"id": 78,
																	"name": "BinaryOperation",
																	"src": "925:13:0"
																}
															],
															"id": 79,
															"name": "FunctionCall",
															"src": "917:22:0"
														}
													],
													"id": 80,
													"name": "ExpressionStatement",
													"src": "917:22:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 9,
																		"type": "address",
																		"value": "previousOwner"
																	},
																	"id": 81,
																	"name": "Identifier",
																	"src": "950:13:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 7,
																		"type": "address",
																		"value": "owner"
																	},
																	"id": 82,
																	"name": "Identifier",
																	"src": "966:5:0"
																}
															],
															"id": 83,
															"name": "Assignment",
															"src": "950:21:0"
														}
													],
													"id": 84,
													"name": "ExpressionStatement",
													"src": "950:21:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 7,
																		"type": "address",
																		"value": "owner"
																	},
																	"id": 85,
																	"name": "Identifier",
																	"src": "1045:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 70,
																		"type": "address",
																		"value": "newOwner"
																	},
																	"id": 86,
																	"name": "Identifier",
																	"src": "1053:8:0"
																}
															],
															"id": 87,
															"name": "Assignment",
															"src": "1045:16:0"
														}
													],
													"id": 88,
													"name": "ExpressionStatement",
													"src": "1045:16:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 19,
																		"type": "function (address)",
																		"value": "OwnerChanged"
																	},
																	"id": 89,
																	"name": "Identifier",
																	"src": "1072:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 70,
																		"type": "address",
																		"value": "newOwner"
																	},
																	"id": 90,
																	"name": "Identifier",
																	"src": "1085:8:0"
																}
															],
															"id": 91,
															"name": "FunctionCall",
															"src": "1072:22:0"
														}
													],
													"id": 92,
													"name": "ExpressionStatement",
													"src": "1072:22:0"
												}
											],
											"id": 93,
											"name": "Block",
											"src": "906:196:0"
										}
									],
									"id": 94,
									"name": "FunctionDefinition",
									"src": "849:253:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "setRegistrar",
										"payable": false,
										"scope": 198,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "newRegistrar",
														"scope": 106,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 95,
															"name": "ElementaryTypeName",
															"src": "1132:7:0"
														}
													],
													"id": 96,
													"name": "VariableDeclaration",
													"src": "1132:20:0"
												}
											],
											"id": 97,
											"name": "ParameterList",
											"src": "1131:22:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 100,
											"name": "ParameterList",
											"src": "1175:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 32,
														"type": "modifier ()",
														"value": "onlyRegistrar"
													},
													"id": 98,
													"name": "Identifier",
													"src": "1161:13:0"
												}
											],
											"id": 99,
											"name": "ModifierInvocation",
											"src": "1161:13:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 5,
																		"type": "address",
																		"value": "registrar"
																	},
																	"id": 101,
																	"name": "Identifier",
																	"src": "1186:9:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 96,
																		"type": "address",
																		"value": "newRegistrar"
																	},
																	"id": 102,
																	"name": "Identifier",
																	"src": "1198:12:0"
																}
															],
															"id": 103,
															"name": "Assignment",
															"src": "1186:24:0"
														}
													],
													"id": 104,
													"name": "ExpressionStatement",
													"src": "1186:24:0"
												}
											],
											"id": 105,
											"name": "Block",
											"src": "1175:43:0"
										}
									],
									"id": 106,
									"name": "FunctionDefinition",
									"src": "1110:108:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "setBalance",
										"payable": false,
										"scope": 198,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "newValue",
														"scope": 141,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 107,
															"name": "ElementaryTypeName",
															"src": "1246:4:0"
														}
													],
													"id": 108,
													"name": "VariableDeclaration",
													"src": "1246:13:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "throwOnFailure",
														"scope": 141,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 109,
															"name": "ElementaryTypeName",
															"src": "1261:4:0"
														}
													],
													"id": 110,
													"name": "VariableDeclaration",
													"src": "1261:19:0"
												}
											],
											"id": 111,
											"name": "ParameterList",
											"src": "1245:36:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 116,
											"name": "ParameterList",
											"src": "1314:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 32,
														"type": "modifier ()",
														"value": "onlyRegistrar"
													},
													"id": 112,
													"name": "Identifier",
													"src": "1289:13:0"
												}
											],
											"id": 113,
											"name": "ModifierInvocation",
											"src": "1289:13:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 40,
														"type": "modifier ()",
														"value": "onlyActive"
													},
													"id": 114,
													"name": "Identifier",
													"src": "1303:10:0"
												}
											],
											"id": 115,
											"name": "ModifierInvocation",
											"src": "1303:10:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 213,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 117,
																	"name": "Identifier",
																	"src": "1385:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 13,
																				"type": "uint256",
																				"value": "value"
																			},
																			"id": 118,
																			"name": "Identifier",
																			"src": "1393:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 108,
																				"type": "uint256",
																				"value": "newValue"
																			},
																			"id": 119,
																			"name": "Identifier",
																			"src": "1402:8:0"
																		}
																	],
																	"id": 120,
																	"name": "BinaryOperation",
																	"src": "1393:17:0"
																}
															],
															"id": 121,
															"name": "FunctionCall",
															"src": "1385:26:0"
														}
													],
													"id": 122,
													"name": "ExpressionStatement",
													"src": "1385:26:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 13,
																		"type": "uint256",
																		"value": "value"
																	},
																	"id": 123,
																	"name": "Identifier",
																	"src": "1422:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 108,
																		"type": "uint256",
																		"value": "newValue"
																	},
																	"id": 124,
																	"name": "Identifier",
																	"src": "1430:8:0"
																}
															],
															"id": 125,
															"name": "Assignment",
															"src": "1422:16:0"
														}
													],
													"id": 126,
													"name": "ExpressionStatement",
													"src": "1422:16:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 213,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 127,
																	"name": "Identifier",
																	"src": "1494:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "||",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "bool",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "send",
																						"referencedDeclaration": null,
																						"type": "function (uint256) returns (bool)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 7,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 128,
																							"name": "Identifier",
																							"src": "1502:5:0"
																						}
																					],
																					"id": 129,
																					"name": "MemberAccess",
																					"src": "1502:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "-",
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "balance",
																								"referencedDeclaration": null,
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 221,
																										"type": "contract Deed",
																										"value": "this"
																									},
																									"id": 130,
																									"name": "Identifier",
																									"src": "1513:4:0"
																								}
																							],
																							"id": 131,
																							"name": "MemberAccess",
																							"src": "1513:12:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 108,
																								"type": "uint256",
																								"value": "newValue"
																							},
																							"id": 132,
																							"name": "Identifier",
																							"src": "1528:8:0"
																						}
																					],
																					"id": 133,
																					"name": "BinaryOperation",
																					"src": "1513:23:0"
																				}
																			],
																			"id": 134,
																			"name": "FunctionCall",
																			"src": "1502:35:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "!",
																				"prefix": true,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 110,
																						"type": "bool",
																						"value": "throwOnFailure"
																					},
																					"id": 135,
																					"name": "Identifier",
																					"src": "1542:14:0"
																				}
																			],
																			"id": 136,
																			"name": "UnaryOperation",
																			"src": "1541:15:0"
																		}
																	],
																	"id": 137,
																	"name": "BinaryOperation",
																	"src": "1502:54:0"
																}
															],
															"id": 138,
															"name": "FunctionCall",
															"src": "1494:63:0"
														}
													],
													"id": 139,
													"name": "ExpressionStatement",
													"src": "1494:63:0"
												}
											],
											"id": 140,
											"name": "Block",
											"src": "1314:251:0"
										}
									],
									"id": 141,
									"name": "FunctionDefinition",
									"src": "1226:339:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "closeDeed",
										"payable": false,
										"scope": 198,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "refundRatio",
														"scope": 177,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 142,
															"name": "ElementaryTypeName",
															"src": "1748:4:0"
														}
													],
													"id": 143,
													"name": "VariableDeclaration",
													"src": "1748:16:0"
												}
											],
											"id": 144,
											"name": "ParameterList",
											"src": "1747:18:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 149,
											"name": "ParameterList",
											"src": "1798:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 32,
														"type": "modifier ()",
														"value": "onlyRegistrar"
													},
													"id": 145,
													"name": "Identifier",
													"src": "1773:13:0"
												}
											],
											"id": 146,
											"name": "ModifierInvocation",
											"src": "1773:13:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 40,
														"type": "modifier ()",
														"value": "onlyActive"
													},
													"id": 147,
													"name": "Identifier",
													"src": "1787:10:0"
												}
											],
											"id": 148,
											"name": "ModifierInvocation",
											"src": "1787:10:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 15,
																		"type": "bool",
																		"value": "active"
																	},
																	"id": 150,
																	"name": "Identifier",
																	"src": "1809:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 151,
																	"name": "Literal",
																	"src": "1818:5:0"
																}
															],
															"id": 152,
															"name": "Assignment",
															"src": "1809:14:0"
														}
													],
													"id": 153,
													"name": "ExpressionStatement",
													"src": "1809:14:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 213,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 154,
																	"name": "Identifier",
																	"src": "1834:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "bool",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "send",
																				"referencedDeclaration": null,
																				"type": "function (uint256) returns (bool)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 3,
																						"type": "address",
																						"value": "burn"
																					},
																					"id": 155,
																					"name": "Identifier",
																					"src": "1842:4:0"
																				}
																			],
																			"id": 156,
																			"name": "MemberAccess",
																			"src": "1842:9:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "/",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"operator": "*",
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"operator": "-",
																												"type": "uint256"
																											},
																											"children": [
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"hexvalue": "31303030",
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"lValueRequested": false,
																														"subdenomination": null,
																														"token": "number",
																														"type": "int_const 1000",
																														"value": "1000"
																													},
																													"id": 157,
																													"name": "Literal",
																													"src": "1854:4:0"
																												},
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"overloadedDeclarations": [
																															null
																														],
																														"referencedDeclaration": 143,
																														"type": "uint256",
																														"value": "refundRatio"
																													},
																													"id": 158,
																													"name": "Identifier",
																													"src": "1861:11:0"
																												}
																											],
																											"id": 159,
																											"name": "BinaryOperation",
																											"src": "1854:18:0"
																										}
																									],
																									"id": 160,
																									"name": "TupleExpression",
																									"src": "1853:20:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "balance",
																										"referencedDeclaration": null,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 221,
																												"type": "contract Deed",
																												"value": "this"
																											},
																											"id": 161,
																											"name": "Identifier",
																											"src": "1876:4:0"
																										}
																									],
																									"id": 162,
																									"name": "MemberAccess",
																									"src": "1876:12:0"
																								}
																							],
																							"id": 163,
																							"name": "BinaryOperation",
																							"src": "1853:35:0"
																						}
																					],
																					"id": 164,
																					"name": "TupleExpression",
																					"src": "1852:37:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "31303030",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "number",
																						"type": "int_const 1000",
																						"value": "1000"
																					},
																					"id": 165,
																					"name": "Literal",
																					"src": "1890:4:0"
																				}
																			],
																			"id": 166,
																			"name": "BinaryOperation",
																			"src": "1852:42:0"
																		}
																	],
																	"id": 167,
																	"name": "FunctionCall",
																	"src": "1842:53:0"
																}
															],
															"id": 168,
															"name": "FunctionCall",
															"src": "1834:62:0"
														}
													],
													"id": 169,
													"name": "ExpressionStatement",
													"src": "1834:62:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"arguments": [
																	null
																],
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			null
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 21,
																		"type": "function ()",
																		"value": "DeedClosed"
																	},
																	"id": 170,
																	"name": "Identifier",
																	"src": "1907:10:0"
																}
															],
															"id": 171,
															"name": "FunctionCall",
															"src": "1907:12:0"
														}
													],
													"id": 172,
													"name": "ExpressionStatement",
													"src": "1907:12:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"arguments": [
																	null
																],
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			null
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 197,
																		"type": "function ()",
																		"value": "destroyDeed"
																	},
																	"id": 173,
																	"name": "Identifier",
																	"src": "1930:11:0"
																}
															],
															"id": 174,
															"name": "FunctionCall",
															"src": "1930:13:0"
														}
													],
													"id": 175,
													"name": "ExpressionStatement",
													"src": "1930:13:0"
												}
											],
											"id": 176,
											"name": "Block",
											"src": "1798:153:0"
										}
									],
									"id": 177,
									"name": "FunctionDefinition",
									"src": "1729:222:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "destroyDeed",
										"payable": false,
										"scope": 198,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 178,
											"name": "ParameterList",
											"src": "2072:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 179,
											"name": "ParameterList",
											"src": "2082:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 213,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 180,
																	"name": "Identifier",
																	"src": "2093:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 15,
																				"type": "bool",
																				"value": "active"
																			},
																			"id": 181,
																			"name": "Identifier",
																			"src": "2102:6:0"
																		}
																	],
																	"id": 182,
																	"name": "UnaryOperation",
																	"src": "2101:7:0"
																}
															],
															"id": 183,
															"name": "FunctionCall",
															"src": "2093:16:0"
														}
													],
													"id": 184,
													"name": "ExpressionStatement",
													"src": "2093:16:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "bool",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "send",
																		"referencedDeclaration": null,
																		"type": "function (uint256) returns (bool)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 7,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 185,
																			"name": "Identifier",
																			"src": "2360:5:0"
																		}
																	],
																	"id": 186,
																	"name": "MemberAccess",
																	"src": "2360:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "balance",
																		"referencedDeclaration": null,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 221,
																				"type": "contract Deed",
																				"value": "this"
																			},
																			"id": 187,
																			"name": "Identifier",
																			"src": "2371:4:0"
																		}
																	],
																	"id": 188,
																	"name": "MemberAccess",
																	"src": "2371:12:0"
																}
															],
															"id": 189,
															"name": "FunctionCall",
															"src": "2360:24:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 216,
																						"type": "function (address)",
																						"value": "selfdestruct"
																					},
																					"id": 190,
																					"name": "Identifier",
																					"src": "2401:12:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 3,
																						"type": "address",
																						"value": "burn"
																					},
																					"id": 191,
																					"name": "Identifier",
																					"src": "2414:4:0"
																				}
																			],
																			"id": 192,
																			"name": "FunctionCall",
																			"src": "2401:18:0"
																		}
																	],
																	"id": 193,
																	"name": "ExpressionStatement",
																	"src": "2401:18:0"
																}
															],
															"id": 194,
															"name": "Block",
															"src": "2386:45:0"
														}
													],
													"id": 195,
													"name": "IfStatement",
													"src": "2356:75:0"
												}
											],
											"id": 196,
											"name": "Block",
											"src": "2082:356:0"
										}
									],
									"id": 197,
									"name": "FunctionDefinition",
									"src": "2052:386:0"
								}
							],
							"id": 198,
							"name": "ContractDefinition",
							"src": "177:2264:0"
						}
					],
					"id": 199,
					"name": "SourceUnit",
					"src": "177:2266:0"
				}
			}
		}
	}
}