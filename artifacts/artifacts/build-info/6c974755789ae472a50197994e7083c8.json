{
	"id": "6c974755789ae472a50197994e7083c8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"artifacts/Decentralizedinsurance.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract DecentralizedInsurance {\r\n    struct Policy {\r\n        address insured;\r\n        uint premium;\r\n        uint coverage;\r\n        bool active;\r\n    }\r\n    \r\n    mapping(address => Policy) public policies;\r\n\r\n    function createPolicy(uint _premium, uint _coverage) public {\r\n        policies[msg.sender] = Policy(msg.sender, _premium, _coverage, true);\r\n    }\r\n\r\n    function claimInsurance() public {\r\n        require(policies[msg.sender].active, \"No active policy found\");\r\n        payable(msg.sender).transfer(policies[msg.sender].coverage);\r\n        policies[msg.sender].active = false;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"artifacts/Decentralizedinsurance.sol": {
				"DecentralizedInsurance": {
					"abi": [
						{
							"inputs": [],
							"name": "claimInsurance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_premium",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_coverage",
									"type": "uint256"
								}
							],
							"name": "createPolicy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "policies",
							"outputs": [
								{
									"internalType": "address",
									"name": "insured",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "premium",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "coverage",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"artifacts/Decentralizedinsurance.sol\":60:667  contract DecentralizedInsurance {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"artifacts/Decentralizedinsurance.sol\":60:667  contract DecentralizedInsurance {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x20e98698\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa75ac608\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc7e2f28e\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"artifacts/Decentralizedinsurance.sol\":228:270  mapping(address => Policy) public policies */\n    tag_3:\n      tag_6\n      tag_7\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_7:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      swap1\n      swap4\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap3\n      swap1\n      swap2\n      0xff\n      and\n      dup5\n      jump\n    tag_6:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":548:580   */\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":530:581   */\n      dup6\n      mstore\n        /* \"#utility.yul\":612:614   */\n      0x20\n        /* \"#utility.yul\":597:615   */\n      dup6\n      add\n        /* \"#utility.yul\":590:624   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":640:658   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":633:667   */\n      mstore\n        /* \"#utility.yul\":710:724   */\n      iszero\n        /* \"#utility.yul\":703:725   */\n      iszero\n        /* \"#utility.yul\":698:700   */\n      0x60\n        /* \"#utility.yul\":683:701   */\n      dup3\n      add\n        /* \"#utility.yul\":676:726   */\n      mstore\n        /* \"#utility.yul\":517:520   */\n      0x80\n        /* \"#utility.yul\":502:521   */\n      add\n        /* \"artifacts/Decentralizedinsurance.sol\":228:270  mapping(address => Policy) public policies */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"artifacts/Decentralizedinsurance.sol\":434:664  function claimInsurance() public {... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"artifacts/Decentralizedinsurance.sol\":279:426  function createPolicy(uint _premium, uint _coverage) public {... */\n    tag_5:\n      tag_12\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"artifacts/Decentralizedinsurance.sol\":373:418  Policy(msg.sender, _premium, _coverage, true) */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n        /* \"artifacts/Decentralizedinsurance.sol\":380:390  msg.sender */\n      caller\n        /* \"artifacts/Decentralizedinsurance.sol\":373:418  Policy(msg.sender, _premium, _coverage, true) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap6\n      dup7\n      mstore\n      dup3\n      dup5\n      add\n      swap5\n      dup6\n      mstore\n        /* \"artifacts/Decentralizedinsurance.sol\":413:417  true */\n      0x01\n        /* \"artifacts/Decentralizedinsurance.sol\":373:418  Policy(msg.sender, _premium, _coverage, true) */\n      0x60\n      dup5\n      add\n      dup2\n      dup2\n      mstore\n      0x00\n        /* \"artifacts/Decentralizedinsurance.sol\":350:370  policies[msg.sender] */\n      swap4\n      dup5\n      mstore\n      swap2\n      dup4\n      swap1\n      mstore\n      swap4\n      swap1\n      swap2\n      keccak256\n        /* \"artifacts/Decentralizedinsurance.sol\":350:418  policies[msg.sender] = Policy(msg.sender, _premium, _coverage, true) */\n      swap2\n      mload\n      dup3\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup3\n      sstore\n      swap4\n      mload\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      swap1\n      mload\n      0x02\n      dup3\n      add\n      sstore\n      swap1\n      mload\n      0x03\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"artifacts/Decentralizedinsurance.sol\":279:426  function createPolicy(uint _premium, uint _coverage) public {... */\n      jump\n        /* \"artifacts/Decentralizedinsurance.sol\":434:664  function claimInsurance() public {... */\n    tag_13:\n        /* \"artifacts/Decentralizedinsurance.sol\":495:505  msg.sender */\n      caller\n        /* \"artifacts/Decentralizedinsurance.sol\":486:494  policies */\n      0x00\n        /* \"artifacts/Decentralizedinsurance.sol\":486:506  policies[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"artifacts/Decentralizedinsurance.sol\":486:513  policies[msg.sender].active */\n      0x03\n      add\n      sload\n      0xff\n      and\n        /* \"artifacts/Decentralizedinsurance.sol\":478:540  require(policies[msg.sender].active, \"No active policy found\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1192:1194   */\n      0x20\n        /* \"artifacts/Decentralizedinsurance.sol\":478:540  require(policies[msg.sender].active, \"No active policy found\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1174:1195   */\n      mstore\n        /* \"#utility.yul\":1231:1233   */\n      0x16\n        /* \"#utility.yul\":1211:1229   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1204:1234   */\n      mstore\n      shl(0x52, 0x139bc81858dd1a5d99481c1bdb1a58de48199bdd5b99)\n        /* \"#utility.yul\":1250:1268   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1243:1295   */\n      mstore\n        /* \"#utility.yul\":1312:1330   */\n      0x64\n      add\n        /* \"artifacts/Decentralizedinsurance.sol\":478:540  require(policies[msg.sender].active, \"No active policy found\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"artifacts/Decentralizedinsurance.sol\":559:569  msg.sender */\n      caller\n        /* \"artifacts/Decentralizedinsurance.sol\":580:588  policies */\n      0x00\n        /* \"artifacts/Decentralizedinsurance.sol\":580:600  policies[msg.sender] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"artifacts/Decentralizedinsurance.sol\":580:609  policies[msg.sender].coverage */\n      0x02\n      add\n      sload\n        /* \"artifacts/Decentralizedinsurance.sol\":551:610  payable(msg.sender).transfer(policies[msg.sender].coverage) */\n      swap1\n      mload\n      dup2\n      iszero\n      0x08fc\n      mul\n      swap3\n      dup2\n        /* \"artifacts/Decentralizedinsurance.sol\":580:588  policies */\n      dup2\n        /* \"artifacts/Decentralizedinsurance.sol\":551:610  payable(msg.sender).transfer(policies[msg.sender].coverage) */\n      dup2\n        /* \"artifacts/Decentralizedinsurance.sol\":580:609  policies[msg.sender].coverage */\n      dup6\n        /* \"artifacts/Decentralizedinsurance.sol\":559:569  msg.sender */\n      dup9\n        /* \"artifacts/Decentralizedinsurance.sol\":551:610  payable(msg.sender).transfer(policies[msg.sender].coverage) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_23:\n      pop\n        /* \"artifacts/Decentralizedinsurance.sol\":630:640  msg.sender */\n      caller\n        /* \"artifacts/Decentralizedinsurance.sol\":651:656  false */\n      0x00\n        /* \"artifacts/Decentralizedinsurance.sol\":621:641  policies[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"artifacts/Decentralizedinsurance.sol\":621:648  policies[msg.sender].active */\n      0x03\n      add\n        /* \"artifacts/Decentralizedinsurance.sol\":621:656  policies[msg.sender].active = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"artifacts/Decentralizedinsurance.sol\":434:664  function claimInsurance() public {... */\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_8:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_27:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_28\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_28:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":737:985   */\n    tag_16:\n        /* \"#utility.yul\":805:811   */\n      0x00\n        /* \"#utility.yul\":813:819   */\n      dup1\n        /* \"#utility.yul\":866:868   */\n      0x40\n        /* \"#utility.yul\":854:863   */\n      dup4\n        /* \"#utility.yul\":845:852   */\n      dup6\n        /* \"#utility.yul\":841:864   */\n      sub\n        /* \"#utility.yul\":837:869   */\n      slt\n        /* \"#utility.yul\":834:886   */\n      iszero\n      tag_31\n      jumpi\n        /* \"#utility.yul\":882:883   */\n      0x00\n        /* \"#utility.yul\":879:880   */\n      dup1\n        /* \"#utility.yul\":872:884   */\n      revert\n        /* \"#utility.yul\":834:886   */\n    tag_31:\n      pop\n      pop\n        /* \"#utility.yul\":905:928   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":975:977   */\n      0x20\n        /* \"#utility.yul\":960:978   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":947:979   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":737:985   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201e0e38dc8143f5cd4479f1275e65dc2d9c8f3627315bc6d4bc87acce49781a2664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506102758061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c806320e9869814610043578063a75ac608146100b4578063c7e2f28e146100be575b5f80fd5b6100846100513660046101f2565b5f6020819052908152604090208054600182015460028301546003909301546001600160a01b0390921692909160ff1684565b604080516001600160a01b0390951685526020850193909352918301521515606082015260800160405180910390f35b6100bc610141565b005b6100bc6100cc36600461021f565b604080516080810182523380825260208083019586528284019485526001606084018181525f9384529183905293909120915182546001600160a01b0319166001600160a01b039091161782559351918101919091559051600282015590516003909101805460ff1916911515919091179055565b335f9081526020819052604090206003015460ff1661019f5760405162461bcd60e51b8152602060048201526016602482015275139bc81858dd1a5d99481c1bdb1a58de48199bdd5b9960521b604482015260640160405180910390fd5b335f8181526020819052604080822060020154905181156108fc0292818181858888f193505050501580156101d6573d5f803e3d5ffd5b50335f908152602081905260409020600301805460ff19169055565b5f60208284031215610202575f80fd5b81356001600160a01b0381168114610218575f80fd5b9392505050565b5f8060408385031215610230575f80fd5b5050803592602090910135915056fea26469706673582212201e0e38dc8143f5cd4479f1275e65dc2d9c8f3627315bc6d4bc87acce49781a2664736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20E98698 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xA75AC608 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xC7E2F28E EQ PUSH2 0xBE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x84 PUSH2 0x51 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC PUSH2 0x141 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBC PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP6 DUP7 MSTORE DUP3 DUP5 ADD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x60 DUP5 ADD DUP2 DUP2 MSTORE PUSH0 SWAP4 DUP5 MSTORE SWAP2 DUP4 SWAP1 MSTORE SWAP4 SWAP1 SWAP2 KECCAK256 SWAP2 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE SWAP4 MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND PUSH2 0x19F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BC81858DD1A5D99481C1BDB1A58DE48199BDD5B99 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD DUP2 ISZERO PUSH2 0x8FC MUL SWAP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1D6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x202 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x218 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x230 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xE CODESIZE 0xDC DUP2 NUMBER CREATE2 0xCD PREVRANDAO PUSH26 0xF1275E65DC2D9C8F3627315BC6D4BC87ACCE49781A2664736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "60:607:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@claimInsurance_70": {
									"entryPoint": 321,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@createPolicy_36": {
									"entryPoint": null,
									"id": 36,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@policies_15": {
									"entryPoint": null,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a138c01b3765b7a815ba183b80b2e2c748e1ec487a3f6d6a8c90db9b76473172__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1338:1",
										"nodeType": "YulBlock",
										"src": "0:1338:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:216:1",
													"nodeType": "YulBlock",
													"src": "84:216:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:1",
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:1",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:1",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nativeSrc": "132:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nativeSrc": "132:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nativeSrc": "101:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:1",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nativeSrc": "97:32:1",
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nativeSrc": "94:52:1",
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nativeSrc": "155:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "181:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "168:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:1"
																},
																"nativeSrc": "168:23:1",
																"nodeType": "YulFunctionCall",
																"src": "168:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:1",
																	"nodeType": "YulTypedName",
																	"src": "159:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:1",
																"nodeType": "YulBlock",
																"src": "254:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:1",
																					"nodeType": "YulLiteral",
																					"src": "263:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:1",
																					"nodeType": "YulLiteral",
																					"src": "266:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:1"
																			},
																			"nativeSrc": "256:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:1"
																		},
																		"nativeSrc": "256:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "213:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "224:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "239:3:1",
																										"nodeType": "YulLiteral",
																										"src": "239:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "244:1:1",
																										"nodeType": "YulLiteral",
																										"src": "244:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "235:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:1"
																								},
																								"nativeSrc": "235:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "248:1:1",
																								"nodeType": "YulLiteral",
																								"src": "248:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "231:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:1"
																						},
																						"nativeSrc": "231:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "220:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:1"
																				},
																				"nativeSrc": "220:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "210:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:1"
																		},
																		"nativeSrc": "210:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "203:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:1"
																},
																"nativeSrc": "203:50:1",
																"nodeType": "YulFunctionCall",
																"src": "203:50:1"
															},
															"nativeSrc": "200:70:1",
															"nodeType": "YulIf",
															"src": "200:70:1"
														},
														{
															"nativeSrc": "279:15:1",
															"nodeType": "YulAssignment",
															"src": "279:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:1",
																"nodeType": "YulIdentifier",
																"src": "289:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "14:286:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:1",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:1",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:1",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:286:1"
											},
											{
												"body": {
													"nativeSrc": "484:248:1",
													"nodeType": "YulBlock",
													"src": "484:248:1",
													"statements": [
														{
															"nativeSrc": "494:27:1",
															"nodeType": "YulAssignment",
															"src": "494:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "506:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "517:3:1",
																		"nodeType": "YulLiteral",
																		"src": "517:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nativeSrc": "502:19:1",
																"nodeType": "YulFunctionCall",
																"src": "502:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "537:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "537:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "552:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "552:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "568:3:1",
																								"nodeType": "YulLiteral",
																								"src": "568:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "573:1:1",
																								"nodeType": "YulLiteral",
																								"src": "573:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "564:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "564:3:1"
																						},
																						"nativeSrc": "564:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "564:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "577:1:1",
																						"nodeType": "YulLiteral",
																						"src": "577:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "560:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "560:3:1"
																				},
																				"nativeSrc": "560:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "560:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "548:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "548:3:1"
																		},
																		"nativeSrc": "548:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "548:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "530:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "530:6:1"
																},
																"nativeSrc": "530:51:1",
																"nodeType": "YulFunctionCall",
																"src": "530:51:1"
															},
															"nativeSrc": "530:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "530:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "601:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "601:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "612:2:1",
																				"nodeType": "YulLiteral",
																				"src": "612:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "597:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "597:3:1"
																		},
																		"nativeSrc": "597:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "597:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "617:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "617:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "590:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "590:6:1"
																},
																"nativeSrc": "590:34:1",
																"nodeType": "YulFunctionCall",
																"src": "590:34:1"
															},
															"nativeSrc": "590:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "590:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "644:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "644:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "655:2:1",
																				"nodeType": "YulLiteral",
																				"src": "655:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "640:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "640:3:1"
																		},
																		"nativeSrc": "640:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "640:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "660:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "660:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "633:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "633:6:1"
																},
																"nativeSrc": "633:34:1",
																"nodeType": "YulFunctionCall",
																"src": "633:34:1"
															},
															"nativeSrc": "633:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "633:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "687:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "687:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "698:2:1",
																				"nodeType": "YulLiteral",
																				"src": "698:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "683:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "683:3:1"
																		},
																		"nativeSrc": "683:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "683:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nativeSrc": "717:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "717:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "710:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "710:6:1"
																				},
																				"nativeSrc": "710:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "710:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "703:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "703:6:1"
																		},
																		"nativeSrc": "703:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "703:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "676:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "676:6:1"
																},
																"nativeSrc": "676:50:1",
																"nodeType": "YulFunctionCall",
																"src": "676:50:1"
															},
															"nativeSrc": "676:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "676:50:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "305:427:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "429:9:1",
														"nodeType": "YulTypedName",
														"src": "429:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "440:6:1",
														"nodeType": "YulTypedName",
														"src": "440:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "448:6:1",
														"nodeType": "YulTypedName",
														"src": "448:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "456:6:1",
														"nodeType": "YulTypedName",
														"src": "456:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "464:6:1",
														"nodeType": "YulTypedName",
														"src": "464:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "475:4:1",
														"nodeType": "YulTypedName",
														"src": "475:4:1",
														"type": ""
													}
												],
												"src": "305:427:1"
											},
											{
												"body": {
													"nativeSrc": "824:161:1",
													"nodeType": "YulBlock",
													"src": "824:161:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "870:16:1",
																"nodeType": "YulBlock",
																"src": "870:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "879:1:1",
																					"nodeType": "YulLiteral",
																					"src": "879:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "882:1:1",
																					"nodeType": "YulLiteral",
																					"src": "882:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "872:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "872:6:1"
																			},
																			"nativeSrc": "872:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "872:12:1"
																		},
																		"nativeSrc": "872:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "872:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "845:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "845:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "854:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "854:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "841:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "841:3:1"
																		},
																		"nativeSrc": "841:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "841:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "866:2:1",
																		"nodeType": "YulLiteral",
																		"src": "866:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "837:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "837:3:1"
																},
																"nativeSrc": "837:32:1",
																"nodeType": "YulFunctionCall",
																"src": "837:32:1"
															},
															"nativeSrc": "834:52:1",
															"nodeType": "YulIf",
															"src": "834:52:1"
														},
														{
															"nativeSrc": "895:33:1",
															"nodeType": "YulAssignment",
															"src": "895:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "918:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "918:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "905:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "905:12:1"
																},
																"nativeSrc": "905:23:1",
																"nodeType": "YulFunctionCall",
																"src": "905:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "895:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:1"
																}
															]
														},
														{
															"nativeSrc": "937:42:1",
															"nodeType": "YulAssignment",
															"src": "937:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "964:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "964:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "975:2:1",
																				"nodeType": "YulLiteral",
																				"src": "975:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "960:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "960:3:1"
																		},
																		"nativeSrc": "960:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "960:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "947:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "947:12:1"
																},
																"nativeSrc": "947:32:1",
																"nodeType": "YulFunctionCall",
																"src": "947:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "937:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "937:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "737:248:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "782:9:1",
														"nodeType": "YulTypedName",
														"src": "782:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "793:7:1",
														"nodeType": "YulTypedName",
														"src": "793:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "805:6:1",
														"nodeType": "YulTypedName",
														"src": "805:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "813:6:1",
														"nodeType": "YulTypedName",
														"src": "813:6:1",
														"type": ""
													}
												],
												"src": "737:248:1"
											},
											{
												"body": {
													"nativeSrc": "1164:172:1",
													"nodeType": "YulBlock",
													"src": "1164:172:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1181:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1181:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1192:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1192:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1174:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1174:6:1"
																},
																"nativeSrc": "1174:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1174:21:1"
															},
															"nativeSrc": "1174:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "1174:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1215:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1215:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1226:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1226:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1211:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1211:3:1"
																		},
																		"nativeSrc": "1211:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1211:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1231:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1231:2:1",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1204:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1204:6:1"
																},
																"nativeSrc": "1204:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1204:30:1"
															},
															"nativeSrc": "1204:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "1204:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1254:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1254:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1265:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1265:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1250:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1250:3:1"
																		},
																		"nativeSrc": "1250:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1250:18:1"
																	},
																	{
																		"hexValue": "4e6f2061637469766520706f6c69637920666f756e64",
																		"kind": "string",
																		"nativeSrc": "1270:24:1",
																		"nodeType": "YulLiteral",
																		"src": "1270:24:1",
																		"type": "",
																		"value": "No active policy found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1243:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1243:6:1"
																},
																"nativeSrc": "1243:52:1",
																"nodeType": "YulFunctionCall",
																"src": "1243:52:1"
															},
															"nativeSrc": "1243:52:1",
															"nodeType": "YulExpressionStatement",
															"src": "1243:52:1"
														},
														{
															"nativeSrc": "1304:26:1",
															"nodeType": "YulAssignment",
															"src": "1304:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1316:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1316:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1327:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1327:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1312:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:1"
																},
																"nativeSrc": "1312:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1312:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1304:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1304:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a138c01b3765b7a815ba183b80b2e2c748e1ec487a3f6d6a8c90db9b76473172__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "990:346:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1141:9:1",
														"nodeType": "YulTypedName",
														"src": "1141:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1155:4:1",
														"nodeType": "YulTypedName",
														"src": "1155:4:1",
														"type": ""
													}
												],
												"src": "990:346:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_a138c01b3765b7a815ba183b80b2e2c748e1ec487a3f6d6a8c90db9b76473172__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"No active policy found\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c806320e9869814610043578063a75ac608146100b4578063c7e2f28e146100be575b5f80fd5b6100846100513660046101f2565b5f6020819052908152604090208054600182015460028301546003909301546001600160a01b0390921692909160ff1684565b604080516001600160a01b0390951685526020850193909352918301521515606082015260800160405180910390f35b6100bc610141565b005b6100bc6100cc36600461021f565b604080516080810182523380825260208083019586528284019485526001606084018181525f9384529183905293909120915182546001600160a01b0319166001600160a01b039091161782559351918101919091559051600282015590516003909101805460ff1916911515919091179055565b335f9081526020819052604090206003015460ff1661019f5760405162461bcd60e51b8152602060048201526016602482015275139bc81858dd1a5d99481c1bdb1a58de48199bdd5b9960521b604482015260640160405180910390fd5b335f8181526020819052604080822060020154905181156108fc0292818181858888f193505050501580156101d6573d5f803e3d5ffd5b50335f908152602081905260409020600301805460ff19169055565b5f60208284031215610202575f80fd5b81356001600160a01b0381168114610218575f80fd5b9392505050565b5f8060408385031215610230575f80fd5b5050803592602090910135915056fea26469706673582212201e0e38dc8143f5cd4479f1275e65dc2d9c8f3627315bc6d4bc87acce49781a2664736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20E98698 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xA75AC608 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xC7E2F28E EQ PUSH2 0xBE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x84 PUSH2 0x51 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC PUSH2 0x141 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBC PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP6 DUP7 MSTORE DUP3 DUP5 ADD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x60 DUP5 ADD DUP2 DUP2 MSTORE PUSH0 SWAP4 DUP5 MSTORE SWAP2 DUP4 SWAP1 MSTORE SWAP4 SWAP1 SWAP2 KECCAK256 SWAP2 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE SWAP4 MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND PUSH2 0x19F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BC81858DD1A5D99481C1BDB1A58DE48199BDD5B99 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD DUP2 ISZERO PUSH2 0x8FC MUL SWAP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1D6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x202 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x218 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x230 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xE CODESIZE 0xDC DUP2 NUMBER CREATE2 0xCD PREVRANDAO PUSH26 0xF1275E65DC2D9C8F3627315BC6D4BC87ACCE49781A2664736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "60:607:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;228:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;228:42:0;;;;;;;;;;;;;;-1:-1:-1;;;;;548:32:1;;;530:51;;612:2;597:18;;590:34;;;;640:18;;;633:34;710:14;703:22;698:2;683:18;;676:50;517:3;502:19;228:42:0;;;;;;;434:230;;;:::i;:::-;;279:147;;;;;;:::i;:::-;373:45;;;;;;;;380:10;373:45;;;;;;;;;;;;;;;;413:4;373:45;;;;;;-1:-1:-1;350:20:0;;;;;;;;;;;:68;;;;-1:-1:-1;;;;;;350:68:0;-1:-1:-1;;;;;350:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;350:68:0;;;;;;;;;;279:147;434:230;495:10;486:8;:20;;;;;;;;;;:27;;;;;478:62;;;;-1:-1:-1;;;478:62:0;;1192:2:1;478:62:0;;;1174:21:1;1231:2;1211:18;;;1204:30;-1:-1:-1;;;1250:18:1;;;1243:52;1312:18;;478:62:0;;;;;;;;559:10;580:8;:20;;;;;;;;;;;:29;;;551:59;;;;;;;;580:8;551:59;580:29;559:10;551:59;;;;;;;;;;;;;;;;;;;;-1:-1:-1;630:10:0;651:5;621:20;;;;;;;;;;:27;;:35;;-1:-1:-1;;621:35:0;;;434:230::o;14:286:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:1;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:1:o;737:248::-;805:6;813;866:2;854:9;845:7;841:23;837:32;834:52;;;882:1;879;872:12;834:52;-1:-1:-1;;905:23:1;;;975:2;960:18;;;947:32;;-1:-1:-1;737:248:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "125800",
								"executionCost": "169",
								"totalCost": "125969"
							},
							"external": {
								"claimInsurance()": "infinite",
								"createPolicy(uint256,uint256)": "93189",
								"policies(address)": "8906"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 667,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 667,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 667,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 667,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 667,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 667,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 667,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 667,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 667,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 667,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 667,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 667,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 667,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 667,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 667,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 667,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 667,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 667,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 667,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 667,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 667,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e0e38dc8143f5cd4479f1275e65dc2d9c8f3627315bc6d4bc87acce49781a2664736f6c63430008190033",
									".code": [
										{
											"begin": 60,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 667,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 667,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 667,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "20E98698"
										},
										{
											"begin": 60,
											"end": 667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "A75AC608"
										},
										{
											"begin": 60,
											"end": 667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "C7E2F28E"
										},
										{
											"begin": 60,
											"end": 667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 228,
											"end": 270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 228,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 228,
											"end": 270,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 228,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 228,
											"end": 270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 228,
											"end": 270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 270,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 228,
											"end": 270,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 228,
											"end": 270,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 228,
											"end": 270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 228,
											"end": 270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 228,
											"end": 270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 228,
											"end": 270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 548,
											"end": 580,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 548,
											"end": 580,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 548,
											"end": 580,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 530,
											"end": 581,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 530,
											"end": 581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 612,
											"end": 614,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 615,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 597,
											"end": 615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 590,
											"end": 624,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 590,
											"end": 624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 590,
											"end": 624,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 590,
											"end": 624,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 640,
											"end": 658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 640,
											"end": 658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 640,
											"end": 658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 633,
											"end": 667,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 710,
											"end": 724,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 703,
											"end": 725,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 698,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 683,
											"end": 701,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 683,
											"end": 701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 726,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 517,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 502,
											"end": 521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 228,
											"end": 270,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 270,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 270,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 434,
											"end": 664,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 434,
											"end": 664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 434,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 434,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 434,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 434,
											"end": 664,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 434,
											"end": 664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 434,
											"end": 664,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 279,
											"end": 426,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 279,
											"end": 426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 279,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 279,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 279,
											"end": 426,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 279,
											"end": 426,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 279,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 279,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 279,
											"end": 426,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 279,
											"end": 426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 373,
											"end": 418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 380,
											"end": 390,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 373,
											"end": 418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 413,
											"end": 417,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 373,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 373,
											"end": 418,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 370,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 350,
											"end": 370,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 350,
											"end": 370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 370,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 350,
											"end": 370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 370,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 350,
											"end": 370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 370,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 350,
											"end": 418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 350,
											"end": 418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 350,
											"end": 418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 350,
											"end": 418,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 279,
											"end": 426,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 434,
											"end": 664,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 434,
											"end": 664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 495,
											"end": 505,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 486,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 486,
											"end": 506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 486,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 486,
											"end": 506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 486,
											"end": 506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 486,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 506,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 486,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 486,
											"end": 513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 486,
											"end": 513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 486,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 486,
											"end": 513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 478,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 478,
											"end": 540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 478,
											"end": 540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 478,
											"end": 540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1194,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 478,
											"end": 540,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 478,
											"end": 540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 478,
											"end": 540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1233,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1211,
											"end": 1229,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1211,
											"end": 1229,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81858DD1A5D99481C1BDB1A58DE48199BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 478,
											"end": 540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 540,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 478,
											"end": 540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 540,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 478,
											"end": 540,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 478,
											"end": 540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 559,
											"end": 569,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 580,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 580,
											"end": 600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 580,
											"end": 600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 580,
											"end": 600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 580,
											"end": 600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 580,
											"end": 600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 580,
											"end": 600,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 580,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 580,
											"end": 609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 580,
											"end": 609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 551,
											"end": 610,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 580,
											"end": 588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 580,
											"end": 609,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 559,
											"end": 569,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 551,
											"end": 610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 610,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 551,
											"end": 610,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 551,
											"end": 610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 630,
											"end": 640,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 651,
											"end": 656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 621,
											"end": 641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 621,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 621,
											"end": 641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 621,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 641,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 621,
											"end": 648,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 621,
											"end": 648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 621,
											"end": 656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 656,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 621,
											"end": 656,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 621,
											"end": 656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 656,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 434,
											"end": 664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 737,
											"end": 985,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 737,
											"end": 985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 805,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 845,
											"end": 852,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 841,
											"end": 864,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 837,
											"end": 869,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 834,
											"end": 886,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 834,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 834,
											"end": 886,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 882,
											"end": 883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 872,
											"end": 884,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 834,
											"end": 886,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 834,
											"end": 886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 905,
											"end": 928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 905,
											"end": 928,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 905,
											"end": 928,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 975,
											"end": 977,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 960,
											"end": 978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 978,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 947,
											"end": 979,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 947,
											"end": 979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 737,
											"end": 985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"artifacts/Decentralizedinsurance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claimInsurance()": "a75ac608",
							"createPolicy(uint256,uint256)": "c7e2f28e",
							"policies(address)": "20e98698"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"claimInsurance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverage\",\"type\":\"uint256\"}],\"name\":\"createPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"policies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"insured\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverage\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"artifacts/Decentralizedinsurance.sol\":\"DecentralizedInsurance\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"artifacts/Decentralizedinsurance.sol\":{\"keccak256\":\"0xcabb3e8371a44e58ff821b7074044b22888fc6db19d362f5ab5de3085c3c32a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3f9ca2fb37541f3b6e17abf9c9c7e6f936fe3b3ad000c8b3b706cef54bf58dd\",\"dweb:/ipfs/QmZCusThrY1edPHPL24UAbHRt9f3hMiEGb9R6SdQ8hxHoC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "artifacts/Decentralizedinsurance.sol:DecentralizedInsurance",
								"label": "policies",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Policy)10_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Policy)10_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DecentralizedInsurance.Policy)",
								"numberOfBytes": "32",
								"value": "t_struct(Policy)10_storage"
							},
							"t_struct(Policy)10_storage": {
								"encoding": "inplace",
								"label": "struct DecentralizedInsurance.Policy",
								"members": [
									{
										"astId": 3,
										"contract": "artifacts/Decentralizedinsurance.sol:DecentralizedInsurance",
										"label": "insured",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 5,
										"contract": "artifacts/Decentralizedinsurance.sol:DecentralizedInsurance",
										"label": "premium",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 7,
										"contract": "artifacts/Decentralizedinsurance.sol:DecentralizedInsurance",
										"label": "coverage",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 9,
										"contract": "artifacts/Decentralizedinsurance.sol:DecentralizedInsurance",
										"label": "active",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"artifacts/Decentralizedinsurance.sol": {
				"ast": {
					"absolutePath": "artifacts/Decentralizedinsurance.sol",
					"exportedSymbols": {
						"DecentralizedInsurance": [
							71
						]
					},
					"id": 72,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DecentralizedInsurance",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 71,
							"linearizedBaseContracts": [
								71
							],
							"name": "DecentralizedInsurance",
							"nameLocation": "69:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DecentralizedInsurance.Policy",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "insured",
											"nameLocation": "132:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "124:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "124:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "premium",
											"nameLocation": "155:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "150:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "150:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "coverage",
											"nameLocation": "178:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "173:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "173:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "active",
											"nameLocation": "202:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "197:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "197:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Policy",
									"nameLocation": "106:6:0",
									"nodeType": "StructDefinition",
									"scope": 71,
									"src": "99:117:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "20e98698",
									"id": 15,
									"mutability": "mutable",
									"name": "policies",
									"nameLocation": "262:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 71,
									"src": "228:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$10_storage_$",
										"typeString": "mapping(address => struct DecentralizedInsurance.Policy)"
									},
									"typeName": {
										"id": 14,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 11,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "236:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "228:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$10_storage_$",
											"typeString": "mapping(address => struct DecentralizedInsurance.Policy)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 13,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 12,
												"name": "Policy",
												"nameLocations": [
													"247:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 10,
												"src": "247:6:0"
											},
											"referencedDeclaration": 10,
											"src": "247:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Policy_$10_storage_ptr",
												"typeString": "struct DecentralizedInsurance.Policy"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "339:87:0",
										"statements": [
											{
												"expression": {
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 22,
															"name": "policies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "350:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$10_storage_$",
																"typeString": "mapping(address => struct DecentralizedInsurance.Policy storage ref)"
															}
														},
														"id": 25,
														"indexExpression": {
															"expression": {
																"id": 23,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "359:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "363:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "359:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "350:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Policy_$10_storage",
															"typeString": "struct DecentralizedInsurance.Policy storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 27,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "380:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "384:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "380:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 29,
																"name": "_premium",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "392:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 30,
																"name": "_coverage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "402:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "413:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 26,
															"name": "Policy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "373:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Policy_$10_storage_ptr_$",
																"typeString": "type(struct DecentralizedInsurance.Policy storage pointer)"
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "373:45:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Policy_$10_memory_ptr",
															"typeString": "struct DecentralizedInsurance.Policy memory"
														}
													},
													"src": "350:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Policy_$10_storage",
														"typeString": "struct DecentralizedInsurance.Policy storage ref"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "350:68:0"
											}
										]
									},
									"functionSelector": "c7e2f28e",
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createPolicy",
									"nameLocation": "288:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "_premium",
												"nameLocation": "306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "301:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "301:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "_coverage",
												"nameLocation": "321:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "316:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "316:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "300:31:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "339:0:0"
									},
									"scope": 71,
									"src": "279:147:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "467:197:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 40,
																	"name": "policies",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "486:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$10_storage_$",
																		"typeString": "mapping(address => struct DecentralizedInsurance.Policy storage ref)"
																	}
																},
																"id": 43,
																"indexExpression": {
																	"expression": {
																		"id": 41,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "495:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "499:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "495:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "486:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Policy_$10_storage",
																	"typeString": "struct DecentralizedInsurance.Policy storage ref"
																}
															},
															"id": 44,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "507:6:0",
															"memberName": "active",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 9,
															"src": "486:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2061637469766520706f6c69637920666f756e64",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "515:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a138c01b3765b7a815ba183b80b2e2c748e1ec487a3f6d6a8c90db9b76473172",
																"typeString": "literal_string \"No active policy found\""
															},
															"value": "No active policy found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a138c01b3765b7a815ba183b80b2e2c748e1ec487a3f6d6a8c90db9b76473172",
																"typeString": "literal_string \"No active policy found\""
															}
														],
														"id": 39,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "478:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "478:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "478:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 54,
																	"name": "policies",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "580:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$10_storage_$",
																		"typeString": "mapping(address => struct DecentralizedInsurance.Policy storage ref)"
																	}
																},
																"id": 57,
																"indexExpression": {
																	"expression": {
																		"id": 55,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "589:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "593:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "589:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "580:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Policy_$10_storage",
																	"typeString": "struct DecentralizedInsurance.Policy storage ref"
																}
															},
															"id": 58,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "601:8:0",
															"memberName": "coverage",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 7,
															"src": "580:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 50,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "559:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 51,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "563:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "559:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "551:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 48,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "551:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "551:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "571:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "551:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "551:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "551:59:0"
											},
											{
												"expression": {
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 61,
																"name": "policies",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "621:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$10_storage_$",
																	"typeString": "mapping(address => struct DecentralizedInsurance.Policy storage ref)"
																}
															},
															"id": 64,
															"indexExpression": {
																"expression": {
																	"id": 62,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "630:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "634:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "630:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "621:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Policy_$10_storage",
																"typeString": "struct DecentralizedInsurance.Policy storage ref"
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "642:6:0",
														"memberName": "active",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "621:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "651:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "621:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "621:35:0"
											}
										]
									},
									"functionSelector": "a75ac608",
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimInsurance",
									"nameLocation": "443:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "457:2:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "467:0:0"
									},
									"scope": 71,
									"src": "434:230:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 72,
							"src": "60:607:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:634:0"
				},
				"id": 0
			}
		}
	}
}