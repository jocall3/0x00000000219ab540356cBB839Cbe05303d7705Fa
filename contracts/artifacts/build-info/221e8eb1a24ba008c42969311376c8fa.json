{
	"id": "221e8eb1a24ba008c42969311376c8fa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Deed.sol": {
				"content": "pragma solidity ^0.4.18;\r\n\r\n/**\r\n * @title Deed to hold ether in exchange for ownership of a node\r\n * @dev The deed can be controlled only by the registrar and can only send ether back to the owner.\r\n */\r\ncontract Deed {\r\n\r\n    address constant burn = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;\r\n\r\n    address public registrar;\r\n    address public owner;\r\n    address public previousOwner;\r\n\r\n    uint public creationDate;\r\n    uint public value;\r\n\r\n    bool active;\r\n\r\n    event OwnerChanged(address newOwner);\r\n    event DeedClosed();\r\n\r\n    modifier onlyRegistrar {\r\n        require(msg.sender == registrar);\r\n        _;\r\n    }\r\n\r\n    modifier onlyActive {\r\n        require(active);\r\n        _;\r\n    }\r\n\r\n    function Deed(address _owner) public payable {\r\n        owner = _owner;\r\n        registrar = msg.sender;\r\n        creationDate = now;\r\n        active = true;\r\n        value = msg.value;\r\n    }\r\n\r\n    function setOwner(address newOwner) public onlyRegistrar {\r\n        require(newOwner != 0);\r\n        previousOwner = owner;  // This allows contracts to check who sent them the ownership\r\n        owner = newOwner;\r\n        OwnerChanged(newOwner);\r\n    }\r\n\r\n    function setRegistrar(address newRegistrar) public onlyRegistrar {\r\n        registrar = newRegistrar;\r\n    }\r\n\r\n    function setBalance(uint newValue, bool throwOnFailure) public onlyRegistrar onlyActive {\r\n        // Check if it has enough balance to set the value\r\n        require(value >= newValue);\r\n        value = newValue;\r\n        // Send the difference to the owner\r\n        require(owner.send(this.balance - newValue) || !throwOnFailure);\r\n    }\r\n\r\n    /**\r\n     * @dev Close a deed and refund a specified fraction of the bid value\r\n     *\r\n     * @param refundRatio The amount*1/1000 to refund\r\n     */\r\n    function closeDeed(uint refundRatio) public onlyRegistrar onlyActive {\r\n        active = false;\r\n        require(burn.send(((1000 - refundRatio) * this.balance)/1000));\r\n        DeedClosed();\r\n        destroyDeed();\r\n    }\r\n\r\n    /**\r\n     * @dev Close a deed and refund a specified fraction of the bid value\r\n     */\r\n    function destroyDeed() public {\r\n        require(!active);\r\n\r\n        // Instead of selfdestruct(owner), invoke owner fallback function to allow\r\n        // owner to log an event if desired; but owner should also be aware that\r\n        // its fallback function can also be invoked by setBalance\r\n        if (owner.send(this.balance)) {\r\n            selfdestruct(burn);\r\n        }\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Deed.sol": {
				"Deed": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "creationDate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "destroyDeed",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "registrar",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "value",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "previousOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newValue",
									"type": "uint256"
								},
								{
									"name": "throwOnFailure",
									"type": "bool"
								}
							],
							"name": "setBalance",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "refundRatio",
									"type": "uint256"
								}
							],
							"name": "closeDeed",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newRegistrar",
									"type": "address"
								}
							],
							"name": "setRegistrar",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "DeedClosed",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"closeDeed(uint256)": {
								"details": "Close a deed and refund a specified fraction of the bid value\r ",
								"params": {
									"refundRatio": "The amount*1/1000 to refund\r"
								}
							},
							"destroyDeed()": {
								"details": "Close a deed and refund a specified fraction of the bid value\r"
							}
						},
						"title": "Deed to hold ether in exchange for ownership of a node\r"
					},
					"evm": {
						"assembly": "    /* \"contracts/Deed.sol\":205:2505  contract Deed {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Deed.sol\":713:905  function Deed(address _owner) public payable {\r... */\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/Deed.sol\":777:783  _owner */\n  dup1\n    /* \"contracts/Deed.sol\":769:774  owner */\n  0x1\n  0x0\n    /* \"contracts/Deed.sol\":769:783  owner = _owner */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Deed.sol\":806:816  msg.sender */\n  caller\n    /* \"contracts/Deed.sol\":794:803  registrar */\n  0x0\n  dup1\n    /* \"contracts/Deed.sol\":794:816  registrar = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Deed.sol\":842:845  now */\n  timestamp\n    /* \"contracts/Deed.sol\":827:839  creationDate */\n  0x3\n    /* \"contracts/Deed.sol\":827:845  creationDate = now */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Deed.sol\":865:869  true */\n  0x1\n    /* \"contracts/Deed.sol\":856:862  active */\n  0x5\n  0x0\n    /* \"contracts/Deed.sol\":856:869  active = true */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Deed.sol\":888:897  msg.value */\n  callvalue\n    /* \"contracts/Deed.sol\":880:885  value */\n  0x4\n    /* \"contracts/Deed.sol\":880:897  value = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Deed.sol\":713:905  function Deed(address _owner) public payable {\r... */\n  pop\n    /* \"contracts/Deed.sol\":205:2505  contract Deed {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Deed.sol\":205:2505  contract Deed {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x5b34410\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xb5ab3d5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x13af4035\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2b20e397\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3fa4f245\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x674f220f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb0c80972\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xbbe42771\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xfaab9d39\n      eq\n      tag_11\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/Deed.sol\":398:422  uint public creationDate */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"contracts/Deed.sol\":398:422  uint public creationDate */\n      pop\n      tag_13\n      jump(tag_14)\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Deed.sol\":2116:2502  function destroyDeed() public {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"contracts/Deed.sol\":2116:2502  function destroyDeed() public {\r... */\n      pop\n      tag_16\n      jump(tag_17)\n    tag_16:\n      stop\n        /* \"contracts/Deed.sol\":913:1166  function setOwner(address newOwner) public onlyRegistrar {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"contracts/Deed.sol\":913:1166  function setOwner(address newOwner) public onlyRegistrar {\r... */\n      pop\n      tag_19\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_20)\n    tag_19:\n      stop\n        /* \"contracts/Deed.sol\":303:327  address public registrar */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"contracts/Deed.sol\":303:327  address public registrar */\n      pop\n      tag_22\n      jump(tag_23)\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Deed.sol\":429:446  uint public value */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n        /* \"contracts/Deed.sol\":429:446  uint public value */\n      pop\n      tag_25\n      jump(tag_26)\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Deed.sol\":361:389  address public previousOwner */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"contracts/Deed.sol\":361:389  address public previousOwner */\n      pop\n      tag_28\n      jump(tag_29)\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Deed.sol\":334:354  address public owner */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_30:\n        /* \"contracts/Deed.sol\":334:354  address public owner */\n      pop\n      tag_31\n      jump(tag_32)\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Deed.sol\":1290:1629  function setBalance(uint newValue, bool throwOnFailure) public onlyRegistrar onlyActive {\r... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_33:\n        /* \"contracts/Deed.sol\":1290:1629  function setBalance(uint newValue, bool throwOnFailure) public onlyRegistrar onlyActive {\r... */\n      pop\n      tag_34\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_35)\n    tag_34:\n      stop\n        /* \"contracts/Deed.sol\":1793:2015  function closeDeed(uint refundRatio) public onlyRegistrar onlyActive {\r... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_36:\n        /* \"contracts/Deed.sol\":1793:2015  function closeDeed(uint refundRatio) public onlyRegistrar onlyActive {\r... */\n      pop\n      tag_37\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_38)\n    tag_37:\n      stop\n        /* \"contracts/Deed.sol\":1174:1282  function setRegistrar(address newRegistrar) public onlyRegistrar {\r... */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_39:\n        /* \"contracts/Deed.sol\":1174:1282  function setRegistrar(address newRegistrar) public onlyRegistrar {\r... */\n      pop\n      tag_40\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_41)\n    tag_40:\n      stop\n        /* \"contracts/Deed.sol\":398:422  uint public creationDate */\n    tag_14:\n      sload(0x3)\n      dup2\n      jump\t// out\n        /* \"contracts/Deed.sol\":2116:2502  function destroyDeed() public {\r... */\n    tag_17:\n        /* \"contracts/Deed.sol\":2166:2172  active */\n      0x5\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Deed.sol\":2165:2172  !active */\n      iszero\n        /* \"contracts/Deed.sol\":2157:2173  require(!active) */\n      iszero\n      iszero\n      tag_43\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_43:\n        /* \"contracts/Deed.sol\":2424:2429  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Deed.sol\":2424:2434  owner.send */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Deed.sol\":2424:2448  owner.send(this.balance) */\n      0x8fc\n        /* \"contracts/Deed.sol\":2435:2439  this */\n      address\n        /* \"contracts/Deed.sol\":2435:2447  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"contracts/Deed.sol\":2424:2448  owner.send(this.balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Deed.sol\":2420:2495  if (owner.send(this.balance)) {\r... */\n      iszero\n      tag_44\n      jumpi\n        /* \"contracts/Deed.sol\":252:294  0x5B38Da6a701c568545dCfcB03FcB875f56beddC4 */\n      0x5b38da6a701c568545dcfcb03fcb875f56beddc4\n        /* \"contracts/Deed.sol\":2465:2483  selfdestruct(burn) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"contracts/Deed.sol\":2420:2495  if (owner.send(this.balance)) {\r... */\n    tag_44:\n        /* \"contracts/Deed.sol\":2116:2502  function destroyDeed() public {\r... */\n      jump\t// out\n        /* \"contracts/Deed.sol\":913:1166  function setOwner(address newOwner) public onlyRegistrar {\r... */\n    tag_20:\n        /* \"contracts/Deed.sol\":601:610  registrar */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Deed.sol\":587:610  msg.sender == registrar */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Deed.sol\":587:597  msg.sender */\n      caller\n        /* \"contracts/Deed.sol\":587:610  msg.sender == registrar */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Deed.sol\":579:611  require(msg.sender == registrar) */\n      iszero\n      iszero\n      tag_46\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_46:\n        /* \"contracts/Deed.sol\":1001:1002  0 */\n      0x0\n        /* \"contracts/Deed.sol\":989:997  newOwner */\n      dup2\n        /* \"contracts/Deed.sol\":989:1002  newOwner != 0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Deed.sol\":981:1003  require(newOwner != 0) */\n      iszero\n      iszero\n      tag_48\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_48:\n        /* \"contracts/Deed.sol\":1030:1035  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Deed.sol\":1014:1027  previousOwner */\n      0x2\n      0x0\n        /* \"contracts/Deed.sol\":1014:1035  previousOwner = owner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Deed.sol\":1117:1125  newOwner */\n      dup1\n        /* \"contracts/Deed.sol\":1109:1114  owner */\n      0x1\n      0x0\n        /* \"contracts/Deed.sol\":1109:1125  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Deed.sol\":1136:1158  OwnerChanged(newOwner) */\n      0xa2ea9883a321a3e97b8266c2b078bfeec6d50c711ed71f874a90d500ae2eaf36\n        /* \"contracts/Deed.sol\":1149:1157  newOwner */\n      dup2\n        /* \"contracts/Deed.sol\":1136:1158  OwnerChanged(newOwner) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Deed.sol\":913:1166  function setOwner(address newOwner) public onlyRegistrar {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Deed.sol\":303:327  address public registrar */\n    tag_23:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Deed.sol\":429:446  uint public value */\n    tag_26:\n      sload(0x4)\n      dup2\n      jump\t// out\n        /* \"contracts/Deed.sol\":361:389  address public previousOwner */\n    tag_29:\n      0x2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Deed.sol\":334:354  address public owner */\n    tag_32:\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Deed.sol\":1290:1629  function setBalance(uint newValue, bool throwOnFailure) public onlyRegistrar onlyActive {\r... */\n    tag_35:\n        /* \"contracts/Deed.sol\":601:610  registrar */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Deed.sol\":587:610  msg.sender == registrar */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Deed.sol\":587:597  msg.sender */\n      caller\n        /* \"contracts/Deed.sol\":587:610  msg.sender == registrar */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Deed.sol\":579:611  require(msg.sender == registrar) */\n      iszero\n      iszero\n      tag_50\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_50:\n        /* \"contracts/Deed.sol\":678:684  active */\n      0x5\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Deed.sol\":670:685  require(active) */\n      iszero\n      iszero\n      tag_52\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_52:\n        /* \"contracts/Deed.sol\":1466:1474  newValue */\n      dup2\n        /* \"contracts/Deed.sol\":1457:1462  value */\n      sload(0x4)\n        /* \"contracts/Deed.sol\":1457:1474  value >= newValue */\n      lt\n      iszero\n        /* \"contracts/Deed.sol\":1449:1475  require(value >= newValue) */\n      iszero\n      iszero\n      tag_54\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_54:\n        /* \"contracts/Deed.sol\":1494:1502  newValue */\n      dup2\n        /* \"contracts/Deed.sol\":1486:1491  value */\n      0x4\n        /* \"contracts/Deed.sol\":1486:1502  value = newValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Deed.sol\":1566:1571  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Deed.sol\":1566:1576  owner.send */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Deed.sol\":1566:1601  owner.send(this.balance - newValue) */\n      0x8fc\n        /* \"contracts/Deed.sol\":1592:1600  newValue */\n      dup4\n        /* \"contracts/Deed.sol\":1577:1581  this */\n      address\n        /* \"contracts/Deed.sol\":1577:1589  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"contracts/Deed.sol\":1577:1600  this.balance - newValue */\n      sub\n        /* \"contracts/Deed.sol\":1566:1601  owner.send(this.balance - newValue) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Deed.sol\":1566:1620  owner.send(this.balance - newValue) || !throwOnFailure */\n      dup1\n      tag_55\n      jumpi\n      pop\n        /* \"contracts/Deed.sol\":1606:1620  throwOnFailure */\n      dup1\n        /* \"contracts/Deed.sol\":1605:1620  !throwOnFailure */\n      iszero\n        /* \"contracts/Deed.sol\":1566:1620  owner.send(this.balance - newValue) || !throwOnFailure */\n    tag_55:\n        /* \"contracts/Deed.sol\":1558:1621  require(owner.send(this.balance - newValue) || !throwOnFailure) */\n      iszero\n      iszero\n      tag_56\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_56:\n        /* \"contracts/Deed.sol\":1290:1629  function setBalance(uint newValue, bool throwOnFailure) public onlyRegistrar onlyActive {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Deed.sol\":1793:2015  function closeDeed(uint refundRatio) public onlyRegistrar onlyActive {\r... */\n    tag_38:\n        /* \"contracts/Deed.sol\":601:610  registrar */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Deed.sol\":587:610  msg.sender == registrar */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Deed.sol\":587:597  msg.sender */\n      caller\n        /* \"contracts/Deed.sol\":587:610  msg.sender == registrar */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Deed.sol\":579:611  require(msg.sender == registrar) */\n      iszero\n      iszero\n      tag_58\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_58:\n        /* \"contracts/Deed.sol\":678:684  active */\n      0x5\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Deed.sol\":670:685  require(active) */\n      iszero\n      iszero\n      tag_60\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_60:\n        /* \"contracts/Deed.sol\":1882:1887  false */\n      0x0\n        /* \"contracts/Deed.sol\":1873:1879  active */\n      0x5\n      0x0\n        /* \"contracts/Deed.sol\":1873:1887  active = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Deed.sol\":252:294  0x5B38Da6a701c568545dCfcB03FcB875f56beddC4 */\n      0x5b38da6a701c568545dcfcb03fcb875f56beddc4\n        /* \"contracts/Deed.sol\":1906:1915  burn.send */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Deed.sol\":1906:1959  burn.send(((1000 - refundRatio) * this.balance)/1000) */\n      0x8fc\n        /* \"contracts/Deed.sol\":1954:1958  1000 */\n      0x3e8\n        /* \"contracts/Deed.sol\":1940:1944  this */\n      address\n        /* \"contracts/Deed.sol\":1940:1952  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"contracts/Deed.sol\":1925:1936  refundRatio */\n      dup5\n        /* \"contracts/Deed.sol\":1918:1922  1000 */\n      0x3e8\n        /* \"contracts/Deed.sol\":1918:1936  1000 - refundRatio */\n      sub\n        /* \"contracts/Deed.sol\":1917:1952  (1000 - refundRatio) * this.balance */\n      mul\n        /* \"contracts/Deed.sol\":1916:1958  ((1000 - refundRatio) * this.balance)/1000 */\n      dup2\n      iszero\n      iszero\n      tag_62\n      jumpi\n      invalid\n    tag_62:\n      div\n        /* \"contracts/Deed.sol\":1906:1959  burn.send(((1000 - refundRatio) * this.balance)/1000) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Deed.sol\":1898:1960  require(burn.send(((1000 - refundRatio) * this.balance)/1000)) */\n      iszero\n      iszero\n      tag_63\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_63:\n        /* \"contracts/Deed.sol\":1971:1983  DeedClosed() */\n      0xbb2ce2f51803bba16bc85282b47deeea9a5c6223eabea1077be696b3f265cf13\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Deed.sol\":1994:2007  destroyDeed() */\n      tag_64\n        /* \"contracts/Deed.sol\":1994:2005  destroyDeed */\n      tag_17\n        /* \"contracts/Deed.sol\":1994:2007  destroyDeed() */\n      jump\t// in\n    tag_64:\n        /* \"contracts/Deed.sol\":1793:2015  function closeDeed(uint refundRatio) public onlyRegistrar onlyActive {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Deed.sol\":1174:1282  function setRegistrar(address newRegistrar) public onlyRegistrar {\r... */\n    tag_41:\n        /* \"contracts/Deed.sol\":601:610  registrar */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Deed.sol\":587:610  msg.sender == registrar */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Deed.sol\":587:597  msg.sender */\n      caller\n        /* \"contracts/Deed.sol\":587:610  msg.sender == registrar */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Deed.sol\":579:611  require(msg.sender == registrar) */\n      iszero\n      iszero\n      tag_66\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_66:\n        /* \"contracts/Deed.sol\":1262:1274  newRegistrar */\n      dup1\n        /* \"contracts/Deed.sol\":1250:1259  registrar */\n      0x0\n      dup1\n        /* \"contracts/Deed.sol\":1250:1274  registrar = newRegistrar */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Deed.sol\":1174:1282  function setRegistrar(address newRegistrar) public onlyRegistrar {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582041d67f5c36786cd7d83ec0a59f29c8fc25ad7737f56da3476936d19e7a1b28f20029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526040516020806109d38339810180604052810190808051906020019092919050505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426003819055506001600560006101000a81548160ff02191690831515021790555034600481905550506108f3806100e06000396000f3006080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305b34410146100a95780630b5ab3d5146100d457806313af4035146100eb5780632b20e3971461012e5780633fa4f24514610185578063674f220f146101b05780638da5cb5b14610207578063b0c809721461025e578063bbe4277114610297578063faab9d39146102c4575b600080fd5b3480156100b557600080fd5b506100be610307565b6040518082815260200191505060405180910390f35b3480156100e057600080fd5b506100e961030d565b005b3480156100f757600080fd5b5061012c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103cb565b005b34801561013a57600080fd5b50610143610556565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019157600080fd5b5061019a61057b565b6040518082815260200191505060405180910390f35b3480156101bc57600080fd5b506101c5610581565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021357600080fd5b5061021c6105a7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026a57600080fd5b50610295600480360381019080803590602001909291908035151590602001909291905050506105cd565b005b3480156102a357600080fd5b506102c2600480360381019080803590602001909291905050506106e3565b005b3480156102d057600080fd5b50610305600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610829565b005b60035481565b600560009054906101000a900460ff1615151561032957600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050156103c957735b38da6a701c568545dcfcb03fcb875f56beddc473ffffffffffffffffffffffffffffffffffffffff16ff5b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561042657600080fd5b60008173ffffffffffffffffffffffffffffffffffffffff161415151561044c57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa2ea9883a321a3e97b8266c2b078bfeec6d50c711ed71f874a90d500ae2eaf3681604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561062857600080fd5b600560009054906101000a900460ff16151561064357600080fd5b816004541015151561065457600080fd5b81600481905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc833073ffffffffffffffffffffffffffffffffffffffff1631039081150290604051600060405180830381858888f19350505050806106d4575080155b15156106df57600080fd5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561073e57600080fd5b600560009054906101000a900460ff16151561075957600080fd5b6000600560006101000a81548160ff021916908315150217905550735b38da6a701c568545dcfcb03fcb875f56beddc473ffffffffffffffffffffffffffffffffffffffff166108fc6103e83073ffffffffffffffffffffffffffffffffffffffff1631846103e803028115156107cc57fe5b049081150290604051600060405180830381858888f1935050505015156107f257600080fd5b7fbb2ce2f51803bba16bc85282b47deeea9a5c6223eabea1077be696b3f265cf1360405160405180910390a161082661030d565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561088457600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a7230582041d67f5c36786cd7d83ec0a59f29c8fc25ad7737f56da3476936d19e7a1b28f20029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x9D3 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP PUSH2 0x8F3 DUP1 PUSH2 0xE0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x5B34410 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0xB5AB3D5 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x2B20E397 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x3FA4F245 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x674F220F EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xB0C80972 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xBBE42771 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xFAAB9D39 EQ PUSH2 0x2C4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x30D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x143 PUSH2 0x556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5CD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x829 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO PUSH2 0x3C9 JUMPI PUSH20 0x5B38DA6A701C568545DCFCB03FCB875F56BEDDC4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xA2EA9883A321A3E97B8266C2B078BFEEC6D50C711ED71F874A90D500AE2EAF36 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x4 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SUB SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP DUP1 PUSH2 0x6D4 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH20 0x5B38DA6A701C568545DCFCB03FCB875F56BEDDC4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0x3E8 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE DUP5 PUSH2 0x3E8 SUB MUL DUP2 ISZERO ISZERO PUSH2 0x7CC JUMPI INVALID JUMPDEST DIV SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xBB2CE2F51803BBA16BC85282B47DEEEA9A5C6223EABEA1077BE696B3F265CF13 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x826 PUSH2 0x30D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 COINBASE 0xd6 PUSH32 0x5C36786CD7D83EC0A59F29C8FC25AD7737F56DA3476936D19E7A1B28F2002900 ",
							"sourceMap": "205:2300:0:-;;;713:192;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:6;769:5;;:14;;;;;;;;;;;;;;;;;;806:10;794:9;;:22;;;;;;;;;;;;;;;;;;842:3;827:12;:18;;;;865:4;856:6;;:13;;;;;;;;;;;;;;;;;;888:9;880:5;:17;;;;713:192;205:2300;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305b34410146100a95780630b5ab3d5146100d457806313af4035146100eb5780632b20e3971461012e5780633fa4f24514610185578063674f220f146101b05780638da5cb5b14610207578063b0c809721461025e578063bbe4277114610297578063faab9d39146102c4575b600080fd5b3480156100b557600080fd5b506100be610307565b6040518082815260200191505060405180910390f35b3480156100e057600080fd5b506100e961030d565b005b3480156100f757600080fd5b5061012c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103cb565b005b34801561013a57600080fd5b50610143610556565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019157600080fd5b5061019a61057b565b6040518082815260200191505060405180910390f35b3480156101bc57600080fd5b506101c5610581565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021357600080fd5b5061021c6105a7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026a57600080fd5b50610295600480360381019080803590602001909291908035151590602001909291905050506105cd565b005b3480156102a357600080fd5b506102c2600480360381019080803590602001909291905050506106e3565b005b3480156102d057600080fd5b50610305600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610829565b005b60035481565b600560009054906101000a900460ff1615151561032957600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050156103c957735b38da6a701c568545dcfcb03fcb875f56beddc473ffffffffffffffffffffffffffffffffffffffff16ff5b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561042657600080fd5b60008173ffffffffffffffffffffffffffffffffffffffff161415151561044c57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa2ea9883a321a3e97b8266c2b078bfeec6d50c711ed71f874a90d500ae2eaf3681604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561062857600080fd5b600560009054906101000a900460ff16151561064357600080fd5b816004541015151561065457600080fd5b81600481905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc833073ffffffffffffffffffffffffffffffffffffffff1631039081150290604051600060405180830381858888f19350505050806106d4575080155b15156106df57600080fd5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561073e57600080fd5b600560009054906101000a900460ff16151561075957600080fd5b6000600560006101000a81548160ff021916908315150217905550735b38da6a701c568545dcfcb03fcb875f56beddc473ffffffffffffffffffffffffffffffffffffffff166108fc6103e83073ffffffffffffffffffffffffffffffffffffffff1631846103e803028115156107cc57fe5b049081150290604051600060405180830381858888f1935050505015156107f257600080fd5b7fbb2ce2f51803bba16bc85282b47deeea9a5c6223eabea1077be696b3f265cf1360405160405180910390a161082661030d565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561088457600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a7230582041d67f5c36786cd7d83ec0a59f29c8fc25ad7737f56da3476936d19e7a1b28f20029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x5B34410 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0xB5AB3D5 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x2B20E397 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x3FA4F245 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x674F220F EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xB0C80972 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xBBE42771 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xFAAB9D39 EQ PUSH2 0x2C4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x30D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x143 PUSH2 0x556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5CD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x829 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO PUSH2 0x3C9 JUMPI PUSH20 0x5B38DA6A701C568545DCFCB03FCB875F56BEDDC4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xA2EA9883A321A3E97B8266C2B078BFEEC6D50C711ED71F874A90D500AE2EAF36 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x4 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SUB SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP DUP1 PUSH2 0x6D4 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH20 0x5B38DA6A701C568545DCFCB03FCB875F56BEDDC4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0x3E8 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE DUP5 PUSH2 0x3E8 SUB MUL DUP2 ISZERO ISZERO PUSH2 0x7CC JUMPI INVALID JUMPDEST DIV SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xBB2CE2F51803BBA16BC85282B47DEEEA9A5C6223EABEA1077BE696B3F265CF13 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x826 PUSH2 0x30D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 COINBASE 0xd6 PUSH32 0x5C36786CD7D83EC0A59F29C8FC25AD7737F56DA3476936D19E7A1B28F2002900 ",
							"sourceMap": "205:2300:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;398:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;398:24:0;;;;;;;;;;;;;;;;;;;;;;;2116:386;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2116:386:0;;;;;;913:253;;8:9:-1;5:2;;;30:1;27;20:12;5:2;913:253:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;303:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;303:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;429:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;429:17:0;;;;;;;;;;;;;;;;;;;;;;;361:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;361:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;334:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;334:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1290:339;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1290:339:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1793:222;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1793:222:0;;;;;;;;;;;;;;;;;;;;;;;;;;1174:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1174:108:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;398:24;;;;:::o;2116:386::-;2166:6;;;;;;;;;;;2165:7;2157:16;;;;;;;;2424:5;;;;;;;;;;;:10;;:24;2435:4;:12;;;2424:24;;;;;;;;;;;;;;;;;;;;;;;2420:75;;;252:42;2465:18;;;2420:75;2116:386::o;913:253::-;601:9;;;;;;;;;;;587:23;;:10;:23;;;579:32;;;;;;;;1001:1;989:8;:13;;;;981:22;;;;;;;;1030:5;;;;;;;;;;;1014:13;;:21;;;;;;;;;;;;;;;;;;1117:8;1109:5;;:16;;;;;;;;;;;;;;;;;;1136:22;1149:8;1136:22;;;;;;;;;;;;;;;;;;;;;;913:253;:::o;303:24::-;;;;;;;;;;;;;:::o;429:17::-;;;;:::o;361:28::-;;;;;;;;;;;;;:::o;334:20::-;;;;;;;;;;;;;:::o;1290:339::-;601:9;;;;;;;;;;;587:23;;:10;:23;;;579:32;;;;;;;;678:6;;;;;;;;;;;670:15;;;;;;;;1466:8;1457:5;;:17;;1449:26;;;;;;;;1494:8;1486:5;:16;;;;1566:5;;;;;;;;;;;:10;;:35;1592:8;1577:4;:12;;;:23;1566:35;;;;;;;;;;;;;;;;;;;;;;;:54;;;;1606:14;1605:15;1566:54;1558:63;;;;;;;;1290:339;;:::o;1793:222::-;601:9;;;;;;;;;;;587:23;;:10;:23;;;579:32;;;;;;;;678:6;;;;;;;;;;;670:15;;;;;;;;1882:5;1873:6;;:14;;;;;;;;;;;;;;;;;;252:42;1906:9;;:53;1954:4;1940;:12;;;1925:11;1918:4;:18;1917:35;1916:42;;;;;;;;1906:53;;;;;;;;;;;;;;;;;;;;;;;1898:62;;;;;;;;1971:12;;;;;;;;;;1994:13;:11;:13::i;:::-;1793:222;:::o;1174:108::-;601:9;;;;;;;;;;;587:23;;:10;:23;;;579:32;;;;;;;;1262:12;1250:9;;:24;;;;;;;;;;;;;;;;;;1174:108;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "458200",
								"executionCost": "101381",
								"totalCost": "559581"
							},
							"external": {
								"closeDeed(uint256)": "infinite",
								"creationDate()": "394",
								"destroyDeed()": "infinite",
								"owner()": "574",
								"previousOwner()": "552",
								"registrar()": "508",
								"setBalance(uint256,bool)": "infinite",
								"setOwner(address)": "42404",
								"setRegistrar(address)": "20938",
								"value()": "482"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 205,
									"end": 2505,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 205,
									"end": 2505,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 205,
									"end": 2505,
									"name": "MSTORE"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "MLOAD"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "DUP1"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "PUSHSIZE"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "DUP4"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "CODECOPY"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "DUP2"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "ADD"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "DUP1"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "MSTORE"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "DUP2"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "ADD"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "SWAP1"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "DUP1"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "DUP1"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "MLOAD"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "SWAP1"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "ADD"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "SWAP1"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "SWAP3"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "SWAP2"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "SWAP1"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "POP"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "POP"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "POP"
								},
								{
									"begin": 777,
									"end": 783,
									"name": "DUP1"
								},
								{
									"begin": 769,
									"end": 774,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 769,
									"end": 774,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 769,
									"end": 783,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 769,
									"end": 783,
									"name": "EXP"
								},
								{
									"begin": 769,
									"end": 783,
									"name": "DUP2"
								},
								{
									"begin": 769,
									"end": 783,
									"name": "SLOAD"
								},
								{
									"begin": 769,
									"end": 783,
									"name": "DUP2"
								},
								{
									"begin": 769,
									"end": 783,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 769,
									"end": 783,
									"name": "MUL"
								},
								{
									"begin": 769,
									"end": 783,
									"name": "NOT"
								},
								{
									"begin": 769,
									"end": 783,
									"name": "AND"
								},
								{
									"begin": 769,
									"end": 783,
									"name": "SWAP1"
								},
								{
									"begin": 769,
									"end": 783,
									"name": "DUP4"
								},
								{
									"begin": 769,
									"end": 783,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 769,
									"end": 783,
									"name": "AND"
								},
								{
									"begin": 769,
									"end": 783,
									"name": "MUL"
								},
								{
									"begin": 769,
									"end": 783,
									"name": "OR"
								},
								{
									"begin": 769,
									"end": 783,
									"name": "SWAP1"
								},
								{
									"begin": 769,
									"end": 783,
									"name": "SSTORE"
								},
								{
									"begin": 769,
									"end": 783,
									"name": "POP"
								},
								{
									"begin": 806,
									"end": 816,
									"name": "CALLER"
								},
								{
									"begin": 794,
									"end": 803,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 794,
									"end": 803,
									"name": "DUP1"
								},
								{
									"begin": 794,
									"end": 816,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 794,
									"end": 816,
									"name": "EXP"
								},
								{
									"begin": 794,
									"end": 816,
									"name": "DUP2"
								},
								{
									"begin": 794,
									"end": 816,
									"name": "SLOAD"
								},
								{
									"begin": 794,
									"end": 816,
									"name": "DUP2"
								},
								{
									"begin": 794,
									"end": 816,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 794,
									"end": 816,
									"name": "MUL"
								},
								{
									"begin": 794,
									"end": 816,
									"name": "NOT"
								},
								{
									"begin": 794,
									"end": 816,
									"name": "AND"
								},
								{
									"begin": 794,
									"end": 816,
									"name": "SWAP1"
								},
								{
									"begin": 794,
									"end": 816,
									"name": "DUP4"
								},
								{
									"begin": 794,
									"end": 816,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 794,
									"end": 816,
									"name": "AND"
								},
								{
									"begin": 794,
									"end": 816,
									"name": "MUL"
								},
								{
									"begin": 794,
									"end": 816,
									"name": "OR"
								},
								{
									"begin": 794,
									"end": 816,
									"name": "SWAP1"
								},
								{
									"begin": 794,
									"end": 816,
									"name": "SSTORE"
								},
								{
									"begin": 794,
									"end": 816,
									"name": "POP"
								},
								{
									"begin": 842,
									"end": 845,
									"name": "TIMESTAMP"
								},
								{
									"begin": 827,
									"end": 839,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 827,
									"end": 845,
									"name": "DUP2"
								},
								{
									"begin": 827,
									"end": 845,
									"name": "SWAP1"
								},
								{
									"begin": 827,
									"end": 845,
									"name": "SSTORE"
								},
								{
									"begin": 827,
									"end": 845,
									"name": "POP"
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 856,
									"end": 862,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 856,
									"end": 862,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 856,
									"end": 869,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 856,
									"end": 869,
									"name": "EXP"
								},
								{
									"begin": 856,
									"end": 869,
									"name": "DUP2"
								},
								{
									"begin": 856,
									"end": 869,
									"name": "SLOAD"
								},
								{
									"begin": 856,
									"end": 869,
									"name": "DUP2"
								},
								{
									"begin": 856,
									"end": 869,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 856,
									"end": 869,
									"name": "MUL"
								},
								{
									"begin": 856,
									"end": 869,
									"name": "NOT"
								},
								{
									"begin": 856,
									"end": 869,
									"name": "AND"
								},
								{
									"begin": 856,
									"end": 869,
									"name": "SWAP1"
								},
								{
									"begin": 856,
									"end": 869,
									"name": "DUP4"
								},
								{
									"begin": 856,
									"end": 869,
									"name": "ISZERO"
								},
								{
									"begin": 856,
									"end": 869,
									"name": "ISZERO"
								},
								{
									"begin": 856,
									"end": 869,
									"name": "MUL"
								},
								{
									"begin": 856,
									"end": 869,
									"name": "OR"
								},
								{
									"begin": 856,
									"end": 869,
									"name": "SWAP1"
								},
								{
									"begin": 856,
									"end": 869,
									"name": "SSTORE"
								},
								{
									"begin": 856,
									"end": 869,
									"name": "POP"
								},
								{
									"begin": 888,
									"end": 897,
									"name": "CALLVALUE"
								},
								{
									"begin": 880,
									"end": 885,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 880,
									"end": 897,
									"name": "DUP2"
								},
								{
									"begin": 880,
									"end": 897,
									"name": "SWAP1"
								},
								{
									"begin": 880,
									"end": 897,
									"name": "SSTORE"
								},
								{
									"begin": 880,
									"end": 897,
									"name": "POP"
								},
								{
									"begin": 713,
									"end": 905,
									"name": "POP"
								},
								{
									"begin": 205,
									"end": 2505,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 2505,
									"name": "DUP1"
								},
								{
									"begin": 205,
									"end": 2505,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 2505,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 205,
									"end": 2505,
									"name": "CODECOPY"
								},
								{
									"begin": 205,
									"end": 2505,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 205,
									"end": 2505,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582041d67f5c36786cd7d83ec0a59f29c8fc25ad7737f56da3476936d19e7a1b28f20029",
									".code": [
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "MSTORE"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "LT"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "JUMPI"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "SWAP1"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "DIV"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "AND"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "DUP1"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH",
											"value": "5B34410"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "EQ"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "JUMPI"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "DUP1"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH",
											"value": "B5AB3D5"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "EQ"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "JUMPI"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "DUP1"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH",
											"value": "13AF4035"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "EQ"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "JUMPI"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "DUP1"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH",
											"value": "2B20E397"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "EQ"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "JUMPI"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "DUP1"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH",
											"value": "3FA4F245"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "EQ"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "JUMPI"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "DUP1"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH",
											"value": "674F220F"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "EQ"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "JUMPI"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "DUP1"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "EQ"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "JUMPI"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "DUP1"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH",
											"value": "B0C80972"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "EQ"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "JUMPI"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "DUP1"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH",
											"value": "BBE42771"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "EQ"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "JUMPI"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "DUP1"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH",
											"value": "FAAB9D39"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "EQ"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "JUMPI"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "JUMPDEST"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "DUP1"
										},
										{
											"begin": 205,
											"end": 2505,
											"name": "REVERT"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "JUMPDEST"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "JUMP"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "JUMPDEST"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "MLOAD"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "DUP3"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "DUP2"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "MSTORE"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "ADD"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "SWAP2"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "MLOAD"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "SWAP2"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "SUB"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "RETURN"
										},
										{
											"begin": 2116,
											"end": 2502,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2116,
											"end": 2502,
											"name": "JUMPDEST"
										},
										{
											"begin": 2116,
											"end": 2502,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2116,
											"end": 2502,
											"name": "POP"
										},
										{
											"begin": 2116,
											"end": 2502,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2116,
											"end": 2502,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2116,
											"end": 2502,
											"name": "JUMP"
										},
										{
											"begin": 2116,
											"end": 2502,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2116,
											"end": 2502,
											"name": "JUMPDEST"
										},
										{
											"begin": 2116,
											"end": 2502,
											"name": "STOP"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "JUMPDEST"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "POP"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "DUP1"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "SUB"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "DUP2"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "ADD"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "SWAP1"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "DUP1"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "DUP1"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "AND"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "SWAP1"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "ADD"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "SWAP1"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "SWAP3"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "SWAP2"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "SWAP1"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "POP"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "POP"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "POP"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "JUMP"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "JUMPDEST"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "STOP"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "POP"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "JUMP"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "MLOAD"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "DUP3"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "AND"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "AND"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "DUP2"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "MSTORE"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "ADD"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "SWAP2"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "POP"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "POP"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "MLOAD"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "SWAP2"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "SUB"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "RETURN"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "JUMPDEST"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "POP"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "JUMP"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "JUMPDEST"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "MLOAD"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "DUP1"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "DUP3"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "DUP2"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "MSTORE"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "ADD"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "SWAP2"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "POP"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "POP"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "MLOAD"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "DUP1"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "SWAP2"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "SUB"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "SWAP1"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "RETURN"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "JUMPDEST"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "POP"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "JUMP"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "JUMPDEST"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "MLOAD"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "DUP1"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "DUP3"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "AND"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "AND"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "DUP2"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "MSTORE"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "ADD"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "SWAP2"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "POP"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "POP"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "MLOAD"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "DUP1"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "SWAP2"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "SUB"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "SWAP1"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "RETURN"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "JUMPDEST"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "POP"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "JUMP"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "JUMPDEST"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "DUP3"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "AND"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "AND"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "DUP2"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "MSTORE"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "ADD"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "SWAP2"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "POP"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "POP"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "SWAP2"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "SUB"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "SWAP1"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "RETURN"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "JUMPDEST"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "SUB"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "DUP2"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "ADD"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "ADD"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "ISZERO"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "ISZERO"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "ADD"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "JUMP"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "JUMPDEST"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "STOP"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "JUMPDEST"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "POP"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "DUP1"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "SUB"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "DUP2"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "ADD"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "SWAP1"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "DUP1"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "DUP1"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "SWAP1"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "ADD"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "SWAP1"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "SWAP3"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "SWAP2"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "SWAP1"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "POP"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "POP"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "POP"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "JUMP"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "JUMPDEST"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "STOP"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "JUMPDEST"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "POP"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "DUP1"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "SUB"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "DUP2"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "ADD"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "SWAP1"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "DUP1"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "DUP1"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "AND"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "SWAP1"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "ADD"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "SWAP1"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "SWAP3"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "SWAP2"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "SWAP1"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "POP"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "POP"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "POP"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "JUMP"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "JUMPDEST"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "STOP"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "JUMPDEST"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "SLOAD"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "DUP2"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2116,
											"end": 2502,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2116,
											"end": 2502,
											"name": "JUMPDEST"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "SLOAD"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "EXP"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "DIV"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "AND"
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "ISZERO"
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "ISZERO"
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "ISZERO"
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "JUMPI"
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "DUP1"
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "REVERT"
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "JUMPDEST"
										},
										{
											"begin": 2424,
											"end": 2429,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2424,
											"end": 2429,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2424,
											"end": 2429,
											"name": "SWAP1"
										},
										{
											"begin": 2424,
											"end": 2429,
											"name": "SLOAD"
										},
										{
											"begin": 2424,
											"end": 2429,
											"name": "SWAP1"
										},
										{
											"begin": 2424,
											"end": 2429,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2424,
											"end": 2429,
											"name": "EXP"
										},
										{
											"begin": 2424,
											"end": 2429,
											"name": "SWAP1"
										},
										{
											"begin": 2424,
											"end": 2429,
											"name": "DIV"
										},
										{
											"begin": 2424,
											"end": 2429,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2424,
											"end": 2429,
											"name": "AND"
										},
										{
											"begin": 2424,
											"end": 2434,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2424,
											"end": 2434,
											"name": "AND"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "ADDRESS"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "BALANCE"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "SWAP1"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "DUP2"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "ISZERO"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "MUL"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "SWAP1"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "MLOAD"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "MLOAD"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "DUP1"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "DUP4"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "SUB"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "DUP2"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "DUP6"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "DUP9"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "DUP9"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "CALL"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "SWAP4"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "POP"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "POP"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "POP"
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "POP"
										},
										{
											"begin": 2420,
											"end": 2495,
											"name": "ISZERO"
										},
										{
											"begin": 2420,
											"end": 2495,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2420,
											"end": 2495,
											"name": "JUMPI"
										},
										{
											"begin": 252,
											"end": 294,
											"name": "PUSH",
											"value": "5B38DA6A701C568545DCFCB03FCB875F56BEDDC4"
										},
										{
											"begin": 2465,
											"end": 2483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2465,
											"end": 2483,
											"name": "AND"
										},
										{
											"begin": 2465,
											"end": 2483,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 2420,
											"end": 2495,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2420,
											"end": 2495,
											"name": "JUMPDEST"
										},
										{
											"begin": 2116,
											"end": 2502,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "JUMPDEST"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "DUP1"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "SLOAD"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "EXP"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "DIV"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 597,
											"name": "CALLER"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "EQ"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "ISZERO"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "ISZERO"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "JUMPI"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "DUP1"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "REVERT"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "JUMPDEST"
										},
										{
											"begin": 1001,
											"end": 1002,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 989,
											"end": 997,
											"name": "DUP2"
										},
										{
											"begin": 989,
											"end": 1002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 989,
											"end": 1002,
											"name": "AND"
										},
										{
											"begin": 989,
											"end": 1002,
											"name": "EQ"
										},
										{
											"begin": 989,
											"end": 1002,
											"name": "ISZERO"
										},
										{
											"begin": 981,
											"end": 1003,
											"name": "ISZERO"
										},
										{
											"begin": 981,
											"end": 1003,
											"name": "ISZERO"
										},
										{
											"begin": 981,
											"end": 1003,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 981,
											"end": 1003,
											"name": "JUMPI"
										},
										{
											"begin": 981,
											"end": 1003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 981,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 981,
											"end": 1003,
											"name": "REVERT"
										},
										{
											"begin": 981,
											"end": 1003,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 981,
											"end": 1003,
											"name": "JUMPDEST"
										},
										{
											"begin": 1030,
											"end": 1035,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1030,
											"end": 1035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1035,
											"name": "SWAP1"
										},
										{
											"begin": 1030,
											"end": 1035,
											"name": "SLOAD"
										},
										{
											"begin": 1030,
											"end": 1035,
											"name": "SWAP1"
										},
										{
											"begin": 1030,
											"end": 1035,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1030,
											"end": 1035,
											"name": "EXP"
										},
										{
											"begin": 1030,
											"end": 1035,
											"name": "SWAP1"
										},
										{
											"begin": 1030,
											"end": 1035,
											"name": "DIV"
										},
										{
											"begin": 1030,
											"end": 1035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1030,
											"end": 1035,
											"name": "AND"
										},
										{
											"begin": 1014,
											"end": 1027,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1014,
											"end": 1027,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1035,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1014,
											"end": 1035,
											"name": "EXP"
										},
										{
											"begin": 1014,
											"end": 1035,
											"name": "DUP2"
										},
										{
											"begin": 1014,
											"end": 1035,
											"name": "SLOAD"
										},
										{
											"begin": 1014,
											"end": 1035,
											"name": "DUP2"
										},
										{
											"begin": 1014,
											"end": 1035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1014,
											"end": 1035,
											"name": "MUL"
										},
										{
											"begin": 1014,
											"end": 1035,
											"name": "NOT"
										},
										{
											"begin": 1014,
											"end": 1035,
											"name": "AND"
										},
										{
											"begin": 1014,
											"end": 1035,
											"name": "SWAP1"
										},
										{
											"begin": 1014,
											"end": 1035,
											"name": "DUP4"
										},
										{
											"begin": 1014,
											"end": 1035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1014,
											"end": 1035,
											"name": "AND"
										},
										{
											"begin": 1014,
											"end": 1035,
											"name": "MUL"
										},
										{
											"begin": 1014,
											"end": 1035,
											"name": "OR"
										},
										{
											"begin": 1014,
											"end": 1035,
											"name": "SWAP1"
										},
										{
											"begin": 1014,
											"end": 1035,
											"name": "SSTORE"
										},
										{
											"begin": 1014,
											"end": 1035,
											"name": "POP"
										},
										{
											"begin": 1117,
											"end": 1125,
											"name": "DUP1"
										},
										{
											"begin": 1109,
											"end": 1114,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1109,
											"end": 1114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1125,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1109,
											"end": 1125,
											"name": "EXP"
										},
										{
											"begin": 1109,
											"end": 1125,
											"name": "DUP2"
										},
										{
											"begin": 1109,
											"end": 1125,
											"name": "SLOAD"
										},
										{
											"begin": 1109,
											"end": 1125,
											"name": "DUP2"
										},
										{
											"begin": 1109,
											"end": 1125,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1125,
											"name": "MUL"
										},
										{
											"begin": 1109,
											"end": 1125,
											"name": "NOT"
										},
										{
											"begin": 1109,
											"end": 1125,
											"name": "AND"
										},
										{
											"begin": 1109,
											"end": 1125,
											"name": "SWAP1"
										},
										{
											"begin": 1109,
											"end": 1125,
											"name": "DUP4"
										},
										{
											"begin": 1109,
											"end": 1125,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1125,
											"name": "AND"
										},
										{
											"begin": 1109,
											"end": 1125,
											"name": "MUL"
										},
										{
											"begin": 1109,
											"end": 1125,
											"name": "OR"
										},
										{
											"begin": 1109,
											"end": 1125,
											"name": "SWAP1"
										},
										{
											"begin": 1109,
											"end": 1125,
											"name": "SSTORE"
										},
										{
											"begin": 1109,
											"end": 1125,
											"name": "POP"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "PUSH",
											"value": "A2EA9883A321A3E97B8266C2B078BFEEC6D50C711ED71F874A90D500AE2EAF36"
										},
										{
											"begin": 1149,
											"end": 1157,
											"name": "DUP2"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "MLOAD"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "DUP1"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "DUP3"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "AND"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "AND"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "DUP2"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "MSTORE"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "ADD"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "SWAP2"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "POP"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "POP"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "MLOAD"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "DUP1"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "SWAP2"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "SUB"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "SWAP1"
										},
										{
											"begin": 1136,
											"end": 1158,
											"name": "LOG1"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "POP"
										},
										{
											"begin": 913,
											"end": 1166,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "SLOAD"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "EXP"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "DIV"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "AND"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "DUP2"
										},
										{
											"begin": 303,
											"end": 327,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "JUMPDEST"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "SLOAD"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "DUP2"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "JUMPDEST"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "SWAP1"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "SLOAD"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "SWAP1"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "EXP"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "SWAP1"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "DIV"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "AND"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "DUP2"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "JUMPDEST"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "SWAP1"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "SLOAD"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "SWAP1"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "EXP"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "SWAP1"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "DIV"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "AND"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "DUP2"
										},
										{
											"begin": 334,
											"end": 354,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "JUMPDEST"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "DUP1"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "SLOAD"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "EXP"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "DIV"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 597,
											"name": "CALLER"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "EQ"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "ISZERO"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "ISZERO"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "JUMPI"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "DUP1"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "REVERT"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "JUMPDEST"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "SWAP1"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "SLOAD"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "SWAP1"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "EXP"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "SWAP1"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "DIV"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "AND"
										},
										{
											"begin": 670,
											"end": 685,
											"name": "ISZERO"
										},
										{
											"begin": 670,
											"end": 685,
											"name": "ISZERO"
										},
										{
											"begin": 670,
											"end": 685,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 670,
											"end": 685,
											"name": "JUMPI"
										},
										{
											"begin": 670,
											"end": 685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 670,
											"end": 685,
											"name": "DUP1"
										},
										{
											"begin": 670,
											"end": 685,
											"name": "REVERT"
										},
										{
											"begin": 670,
											"end": 685,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 670,
											"end": 685,
											"name": "JUMPDEST"
										},
										{
											"begin": 1466,
											"end": 1474,
											"name": "DUP2"
										},
										{
											"begin": 1457,
											"end": 1462,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1457,
											"end": 1462,
											"name": "SLOAD"
										},
										{
											"begin": 1457,
											"end": 1474,
											"name": "LT"
										},
										{
											"begin": 1457,
											"end": 1474,
											"name": "ISZERO"
										},
										{
											"begin": 1449,
											"end": 1475,
											"name": "ISZERO"
										},
										{
											"begin": 1449,
											"end": 1475,
											"name": "ISZERO"
										},
										{
											"begin": 1449,
											"end": 1475,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 1449,
											"end": 1475,
											"name": "JUMPI"
										},
										{
											"begin": 1449,
											"end": 1475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1475,
											"name": "DUP1"
										},
										{
											"begin": 1449,
											"end": 1475,
											"name": "REVERT"
										},
										{
											"begin": 1449,
											"end": 1475,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 1449,
											"end": 1475,
											"name": "JUMPDEST"
										},
										{
											"begin": 1494,
											"end": 1502,
											"name": "DUP2"
										},
										{
											"begin": 1486,
											"end": 1491,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "DUP2"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "SWAP1"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "SSTORE"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "POP"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "SWAP1"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "SLOAD"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "SWAP1"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "EXP"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "SWAP1"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "DIV"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "AND"
										},
										{
											"begin": 1566,
											"end": 1576,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1566,
											"end": 1576,
											"name": "AND"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1592,
											"end": 1600,
											"name": "DUP4"
										},
										{
											"begin": 1577,
											"end": 1581,
											"name": "ADDRESS"
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "AND"
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "BALANCE"
										},
										{
											"begin": 1577,
											"end": 1600,
											"name": "SUB"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "SWAP1"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "DUP2"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "ISZERO"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "MUL"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "SWAP1"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "MLOAD"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "MLOAD"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "DUP1"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "DUP4"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "SUB"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "DUP2"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "DUP6"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "DUP9"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "DUP9"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "CALL"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "SWAP4"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "POP"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "POP"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "POP"
										},
										{
											"begin": 1566,
											"end": 1601,
											"name": "POP"
										},
										{
											"begin": 1566,
											"end": 1620,
											"name": "DUP1"
										},
										{
											"begin": 1566,
											"end": 1620,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1566,
											"end": 1620,
											"name": "JUMPI"
										},
										{
											"begin": 1566,
											"end": 1620,
											"name": "POP"
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 1620,
											"name": "ISZERO"
										},
										{
											"begin": 1566,
											"end": 1620,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 1566,
											"end": 1620,
											"name": "JUMPDEST"
										},
										{
											"begin": 1558,
											"end": 1621,
											"name": "ISZERO"
										},
										{
											"begin": 1558,
											"end": 1621,
											"name": "ISZERO"
										},
										{
											"begin": 1558,
											"end": 1621,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 1558,
											"end": 1621,
											"name": "JUMPI"
										},
										{
											"begin": 1558,
											"end": 1621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1621,
											"name": "DUP1"
										},
										{
											"begin": 1558,
											"end": 1621,
											"name": "REVERT"
										},
										{
											"begin": 1558,
											"end": 1621,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 1558,
											"end": 1621,
											"name": "JUMPDEST"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1290,
											"end": 1629,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "JUMPDEST"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "DUP1"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "SLOAD"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "EXP"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "DIV"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 597,
											"name": "CALLER"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "EQ"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "ISZERO"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "ISZERO"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "JUMPI"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "DUP1"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "REVERT"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "JUMPDEST"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "SWAP1"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "SLOAD"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "SWAP1"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "EXP"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "SWAP1"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "DIV"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "AND"
										},
										{
											"begin": 670,
											"end": 685,
											"name": "ISZERO"
										},
										{
											"begin": 670,
											"end": 685,
											"name": "ISZERO"
										},
										{
											"begin": 670,
											"end": 685,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 670,
											"end": 685,
											"name": "JUMPI"
										},
										{
											"begin": 670,
											"end": 685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 670,
											"end": 685,
											"name": "DUP1"
										},
										{
											"begin": 670,
											"end": 685,
											"name": "REVERT"
										},
										{
											"begin": 670,
											"end": 685,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 670,
											"end": 685,
											"name": "JUMPDEST"
										},
										{
											"begin": 1882,
											"end": 1887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1879,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1873,
											"end": 1879,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "EXP"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "DUP2"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "SLOAD"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "DUP2"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "MUL"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "NOT"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "AND"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "SWAP1"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "DUP4"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "ISZERO"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "ISZERO"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "MUL"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "OR"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "SWAP1"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "SSTORE"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "POP"
										},
										{
											"begin": 252,
											"end": 294,
											"name": "PUSH",
											"value": "5B38DA6A701C568545DCFCB03FCB875F56BEDDC4"
										},
										{
											"begin": 1906,
											"end": 1915,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1906,
											"end": 1915,
											"name": "AND"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1954,
											"end": 1958,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 1940,
											"end": 1944,
											"name": "ADDRESS"
										},
										{
											"begin": 1940,
											"end": 1952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1940,
											"end": 1952,
											"name": "AND"
										},
										{
											"begin": 1940,
											"end": 1952,
											"name": "BALANCE"
										},
										{
											"begin": 1925,
											"end": 1936,
											"name": "DUP5"
										},
										{
											"begin": 1918,
											"end": 1922,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 1918,
											"end": 1936,
											"name": "SUB"
										},
										{
											"begin": 1917,
											"end": 1952,
											"name": "MUL"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP2"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ISZERO"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ISZERO"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "JUMPI"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "INVALID"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "JUMPDEST"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DIV"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "SWAP1"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "DUP2"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "ISZERO"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "MUL"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "SWAP1"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "MLOAD"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "MLOAD"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "DUP1"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "DUP4"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "SUB"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "DUP2"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "DUP6"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "DUP9"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "DUP9"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "CALL"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "SWAP4"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "POP"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "POP"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "POP"
										},
										{
											"begin": 1906,
											"end": 1959,
											"name": "POP"
										},
										{
											"begin": 1898,
											"end": 1960,
											"name": "ISZERO"
										},
										{
											"begin": 1898,
											"end": 1960,
											"name": "ISZERO"
										},
										{
											"begin": 1898,
											"end": 1960,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1898,
											"end": 1960,
											"name": "JUMPI"
										},
										{
											"begin": 1898,
											"end": 1960,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1960,
											"name": "DUP1"
										},
										{
											"begin": 1898,
											"end": 1960,
											"name": "REVERT"
										},
										{
											"begin": 1898,
											"end": 1960,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 1898,
											"end": 1960,
											"name": "JUMPDEST"
										},
										{
											"begin": 1971,
											"end": 1983,
											"name": "PUSH",
											"value": "BB2CE2F51803BBA16BC85282B47DEEEA9A5C6223EABEA1077BE696B3F265CF13"
										},
										{
											"begin": 1971,
											"end": 1983,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 1983,
											"name": "MLOAD"
										},
										{
											"begin": 1971,
											"end": 1983,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 1983,
											"name": "MLOAD"
										},
										{
											"begin": 1971,
											"end": 1983,
											"name": "DUP1"
										},
										{
											"begin": 1971,
											"end": 1983,
											"name": "SWAP2"
										},
										{
											"begin": 1971,
											"end": 1983,
											"name": "SUB"
										},
										{
											"begin": 1971,
											"end": 1983,
											"name": "SWAP1"
										},
										{
											"begin": 1971,
											"end": 1983,
											"name": "LOG1"
										},
										{
											"begin": 1994,
											"end": 2007,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 1994,
											"end": 2005,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1994,
											"end": 2007,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1994,
											"end": 2007,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 1994,
											"end": 2007,
											"name": "JUMPDEST"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "POP"
										},
										{
											"begin": 1793,
											"end": 2015,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "JUMPDEST"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "DUP1"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "SLOAD"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "EXP"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "DIV"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 597,
											"name": "CALLER"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 610,
											"name": "EQ"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "ISZERO"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "ISZERO"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "JUMPI"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "DUP1"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "REVERT"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "JUMPDEST"
										},
										{
											"begin": 1262,
											"end": 1274,
											"name": "DUP1"
										},
										{
											"begin": 1250,
											"end": 1259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1259,
											"name": "DUP1"
										},
										{
											"begin": 1250,
											"end": 1274,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1250,
											"end": 1274,
											"name": "EXP"
										},
										{
											"begin": 1250,
											"end": 1274,
											"name": "DUP2"
										},
										{
											"begin": 1250,
											"end": 1274,
											"name": "SLOAD"
										},
										{
											"begin": 1250,
											"end": 1274,
											"name": "DUP2"
										},
										{
											"begin": 1250,
											"end": 1274,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1250,
											"end": 1274,
											"name": "MUL"
										},
										{
											"begin": 1250,
											"end": 1274,
											"name": "NOT"
										},
										{
											"begin": 1250,
											"end": 1274,
											"name": "AND"
										},
										{
											"begin": 1250,
											"end": 1274,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1274,
											"name": "DUP4"
										},
										{
											"begin": 1250,
											"end": 1274,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1250,
											"end": 1274,
											"name": "AND"
										},
										{
											"begin": 1250,
											"end": 1274,
											"name": "MUL"
										},
										{
											"begin": 1250,
											"end": 1274,
											"name": "OR"
										},
										{
											"begin": 1250,
											"end": 1274,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1274,
											"name": "SSTORE"
										},
										{
											"begin": 1250,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "POP"
										},
										{
											"begin": 1174,
											"end": 1282,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"closeDeed(uint256)": "bbe42771",
							"creationDate()": "05b34410",
							"destroyDeed()": "0b5ab3d5",
							"owner()": "8da5cb5b",
							"previousOwner()": "674f220f",
							"registrar()": "2b20e397",
							"setBalance(uint256,bool)": "b0c80972",
							"setOwner(address)": "13af4035",
							"setRegistrar(address)": "faab9d39",
							"value()": "3fa4f245"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"creationDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroyDeed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registrar\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"previousOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newValue\",\"type\":\"uint256\"},{\"name\":\"throwOnFailure\",\"type\":\"bool\"}],\"name\":\"setBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"refundRatio\",\"type\":\"uint256\"}],\"name\":\"closeDeed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newRegistrar\",\"type\":\"address\"}],\"name\":\"setRegistrar\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DeedClosed\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"closeDeed(uint256)\":{\"details\":\"Close a deed and refund a specified fraction of the bid value\\r \",\"params\":{\"refundRatio\":\"The amount*1/1000 to refund\\r\"}},\"destroyDeed()\":{\"details\":\"Close a deed and refund a specified fraction of the bid value\\r\"}},\"title\":\"Deed to hold ether in exchange for ownership of a node\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Deed.sol\":\"Deed\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Deed.sol\":{\"keccak256\":\"0xda3d91d1c52743be21a02d09d8707725ebaca12c46bf12c243a1020d8e36fc7b\",\"urls\":[\"bzzr://2a1e7aef257d002ed1107c9e97bdf5a4fcec6a11b53876043672a6a59d11ab93\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/Deed.sol:33:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Deed(address _owner) public payable {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 905,
					"file": "contracts/Deed.sol",
					"start": 713
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/Deed.sol:45:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        OwnerChanged(newOwner);\r\n        ^--------------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1158,
					"file": "contracts/Deed.sol",
					"start": 1136
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/Deed.sol:57:28: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        require(owner.send(this.balance - newValue) || !throwOnFailure);\r\n                           ^----------^\n",
				"message": "Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1589,
					"file": "contracts/Deed.sol",
					"start": 1577
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/Deed.sol:67:51: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        require(burn.send(((1000 - refundRatio) * this.balance)/1000));\r\n                                                  ^----------^\n",
				"message": "Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1952,
					"file": "contracts/Deed.sol",
					"start": 1940
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/Deed.sol:68:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        DeedClosed();\r\n        ^----------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1983,
					"file": "contracts/Deed.sol",
					"start": 1971
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/Deed.sol:81:24: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        if (owner.send(this.balance)) {\r\n                       ^----------^\n",
				"message": "Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2447,
					"file": "contracts/Deed.sol",
					"start": 2435
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Deed.sol": {
				"ast": {
					"absolutePath": "contracts/Deed.sol",
					"exportedSymbols": {
						"Deed": [
							199
						]
					},
					"id": 200,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Deed to hold ether in exchange for ownership of a node\r\n@dev The deed can be controlled only by the registrar and can only send ether back to the owner.\r",
							"fullyImplemented": true,
							"id": 199,
							"linearizedBaseContracts": [
								199
							],
							"name": "Deed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 4,
									"name": "burn",
									"nodeType": "VariableDeclaration",
									"scope": 199,
									"src": "228:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "228:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307835423338446136613730316335363835343564436663423033466342383735663536626564644334",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "252:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 6,
									"name": "registrar",
									"nodeType": "VariableDeclaration",
									"scope": 199,
									"src": "303:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 5,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "303:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 8,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 199,
									"src": "334:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "334:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 10,
									"name": "previousOwner",
									"nodeType": "VariableDeclaration",
									"scope": 199,
									"src": "361:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "361:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 12,
									"name": "creationDate",
									"nodeType": "VariableDeclaration",
									"scope": 199,
									"src": "398:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 11,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "398:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 14,
									"name": "value",
									"nodeType": "VariableDeclaration",
									"scope": 199,
									"src": "429:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 13,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "429:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 16,
									"name": "active",
									"nodeType": "VariableDeclaration",
									"scope": 199,
									"src": "455:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 15,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "455:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 20,
									"name": "OwnerChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "494:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "493:18:0"
									},
									"src": "475:37:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 22,
									"name": "DeedClosed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "534:2:0"
									},
									"src": "518:19:0"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "568:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 25,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "587:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "587:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 27,
																"name": "registrar",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "601:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "587:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															217,
															218
														],
														"referencedDeclaration": 217,
														"src": "579:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "579:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "579:32:0"
											},
											{
												"id": 31,
												"nodeType": "PlaceholderStatement",
												"src": "622:1:0"
											}
										]
									},
									"documentation": null,
									"id": 33,
									"name": "onlyRegistrar",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "568:0:0"
									},
									"src": "545:86:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "659:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 36,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "678:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															217,
															218
														],
														"referencedDeclaration": 217,
														"src": "670:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "670:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "670:15:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "696:1:0"
											}
										]
									},
									"documentation": null,
									"id": 41,
									"name": "onlyActive",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:0:0"
									},
									"src": "639:66:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "758:147:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 46,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "769:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 47,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "777:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "769:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "769:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 50,
														"name": "registrar",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "794:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 51,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "806:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "806:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "794:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "794:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 55,
														"name": "creationDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "827:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 56,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "842:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "827:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "827:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 59,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "856:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "865:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "856:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "856:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 63,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "880:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 64,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "888:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "888:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "880:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "880:17:0"
											}
										]
									},
									"documentation": null,
									"id": 69,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Deed",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "727:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "726:16:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "758:0:0"
									},
									"scope": 199,
									"src": "713:192:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "970:196:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "989:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1001:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "989:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															217,
															218
														],
														"referencedDeclaration": 217,
														"src": "981:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "981:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "981:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 82,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1014:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 83,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1030:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1014:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1014:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 86,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1109:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 87,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "1117:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1109:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1109:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 91,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "1149:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "OwnerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1136:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1136:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1136:22:0"
											}
										]
									},
									"documentation": null,
									"id": 95,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 74,
											"modifierName": {
												"argumentTypes": null,
												"id": 73,
												"name": "onlyRegistrar",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 33,
												"src": "956:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "956:13:0"
										}
									],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "931:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "930:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "970:0:0"
									},
									"scope": 199,
									"src": "913:253:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "1239:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 102,
														"name": "registrar",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "1250:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 103,
														"name": "newRegistrar",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "1262:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1250:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "1250:24:0"
											}
										]
									},
									"documentation": null,
									"id": 107,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 100,
											"modifierName": {
												"argumentTypes": null,
												"id": 99,
												"name": "onlyRegistrar",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 33,
												"src": "1225:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1225:13:0"
										}
									],
									"name": "setRegistrar",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"name": "newRegistrar",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1196:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1195:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1239:0:0"
									},
									"scope": 199,
									"src": "1174:108:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "1378:251:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 119,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "1457:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 120,
																"name": "newValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "1466:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1457:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															217,
															218
														],
														"referencedDeclaration": 217,
														"src": "1449:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1449:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "1449:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 124,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1486:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 125,
														"name": "newValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "1494:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1486:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 131,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "1577:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Deed_$199",
																					"typeString": "contract Deed"
																				}
																			},
																			"id": 132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1577:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 133,
																			"name": "newValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 109,
																			"src": "1592:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1577:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 129,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 8,
																		"src": "1566:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "send",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1566:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) returns (bool)"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1566:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1605:15:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 136,
																	"name": "throwOnFailure",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "1606:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1566:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															217,
															218
														],
														"referencedDeclaration": 217,
														"src": "1558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1558:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "1558:63:0"
											}
										]
									},
									"documentation": null,
									"id": 142,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 114,
											"modifierName": {
												"argumentTypes": null,
												"id": 113,
												"name": "onlyRegistrar",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 33,
												"src": "1353:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1353:13:0"
										},
										{
											"arguments": null,
											"id": 116,
											"modifierName": {
												"argumentTypes": null,
												"id": 115,
												"name": "onlyActive",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 41,
												"src": "1367:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1367:10:0"
										}
									],
									"name": "setBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"name": "newValue",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1310:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1310:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"name": "throwOnFailure",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1325:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1325:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1309:36:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1378:0:0"
									},
									"scope": 199,
									"src": "1290:339:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1862:153:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 151,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1873:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1882:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1873:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1873:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 160,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"hexValue": "31303030",
																								"id": 158,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1918:4:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000_by_1",
																									"typeString": "int_const 1000"
																								},
																								"value": "1000"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 159,
																								"name": "refundRatio",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 144,
																								"src": "1925:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1918:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 161,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1917:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 162,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 227,
																						"src": "1940:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_Deed_$199",
																							"typeString": "contract Deed"
																						}
																					},
																					"id": 163,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "balance",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "1940:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1917:35:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 165,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1916:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31303030",
																		"id": 166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1954:4:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	},
																	"src": "1916:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 156,
																	"name": "burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "1906:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "send",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1906:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) returns (bool)"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1906:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															217,
															218
														],
														"referencedDeclaration": 217,
														"src": "1898:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1898:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "1898:62:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 171,
														"name": "DeedClosed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1971:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1971:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "1971:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 174,
														"name": "destroyDeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "1994:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1994:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "1994:13:0"
											}
										]
									},
									"documentation": "@dev Close a deed and refund a specified fraction of the bid value\r\n\n     * @param refundRatio The amount*1/1000 to refund\r",
									"id": 178,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 147,
											"modifierName": {
												"argumentTypes": null,
												"id": 146,
												"name": "onlyRegistrar",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 33,
												"src": "1837:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1837:13:0"
										},
										{
											"arguments": null,
											"id": 149,
											"modifierName": {
												"argumentTypes": null,
												"id": 148,
												"name": "onlyActive",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 41,
												"src": "1851:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1851:10:0"
										}
									],
									"name": "closeDeed",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"name": "refundRatio",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1812:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1812:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1811:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1862:0:0"
									},
									"scope": 199,
									"src": "1793:222:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "2146:356:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2165:7:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 182,
																"name": "active",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "2166:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															217,
															218
														],
														"referencedDeclaration": 217,
														"src": "2157:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2157:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2157:16:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 188,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "2435:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Deed_$199",
																	"typeString": "contract Deed"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2435:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 186,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "2424:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "send",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2424:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) returns (bool)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 196,
												"nodeType": "IfStatement",
												"src": "2420:75:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "2450:45:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 192,
																		"name": "burn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4,
																		"src": "2478:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 191,
																	"name": "selfdestruct",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "2465:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2465:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 194,
															"nodeType": "ExpressionStatement",
															"src": "2465:18:0"
														}
													]
												}
											}
										]
									},
									"documentation": "@dev Close a deed and refund a specified fraction of the bid value\r",
									"id": 198,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "destroyDeed",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2146:0:0"
									},
									"scope": 199,
									"src": "2116:386:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 200,
							"src": "205:2300:0"
						}
					],
					"src": "0:2507:0"
				},
				"id": 0
			}
		}
	}
}